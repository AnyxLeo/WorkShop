{"id":"../node_modules/react-form-validator-core/lib/ValidationRules.js","dependencies":[{"name":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\package.json","includedInParent":true,"mtime":1567469419529},{"name":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\react-form-validator-core\\package.json","includedInParent":true,"mtime":1567480637224}],"generated":{"js":"'use strict';\n\nvar isExisty = function isExisty(value) {\n    return value !== null && value !== undefined;\n};\n\nvar _isEmpty = function _isEmpty(value) {\n    if (value instanceof Array) {\n        return value.length === 0;\n    }\n    return value === '' || !isExisty(value);\n};\n\nvar isEmptyTrimed = function isEmptyTrimed(value) {\n    if (typeof value === 'string') {\n        return value.trim() === '';\n    }\n    return true;\n};\n\nvar validations = {\n    matchRegexp: function matchRegexp(value, regexp) {\n        var validationRegexp = regexp instanceof RegExp ? regexp : new RegExp(regexp);\n        return _isEmpty(value) || validationRegexp.test(value);\n    },\n\n    // eslint-disable-next-line\n    isEmail: function isEmail(value) {\n        return validations.matchRegexp(value, /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))$/i);\n    },\n\n    isEmpty: function isEmpty(value) {\n        return _isEmpty(value);\n    },\n\n    required: function required(value) {\n        return !_isEmpty(value);\n    },\n\n    trim: function trim(value) {\n        return !isEmptyTrimed(value);\n    },\n\n    isNumber: function isNumber(value) {\n        return validations.matchRegexp(value, /^-?[0-9]\\d*(\\d+)?$/i);\n    },\n\n    isFloat: function isFloat(value) {\n        return validations.matchRegexp(value, /^(?:-?[1-9]\\d*|-?0)?(?:\\.\\d+)?$/i);\n    },\n\n    isPositive: function isPositive(value) {\n        if (isExisty(value)) {\n            return (validations.isNumber(value) || validations.isFloat(value)) && value >= 0;\n        }\n        return true;\n    },\n\n    maxNumber: function maxNumber(value, max) {\n        return _isEmpty(value) || parseInt(value, 10) <= parseInt(max, 10);\n    },\n\n    minNumber: function minNumber(value, min) {\n        return _isEmpty(value) || parseInt(value, 10) >= parseInt(min, 10);\n    },\n\n    maxFloat: function maxFloat(value, max) {\n        return _isEmpty(value) || parseFloat(value) <= parseFloat(max);\n    },\n\n    minFloat: function minFloat(value, min) {\n        return _isEmpty(value) || parseFloat(value) >= parseFloat(min);\n    },\n\n    isString: function isString(value) {\n        return !_isEmpty(value) || typeof value === 'string' || value instanceof String;\n    },\n    minStringLength: function minStringLength(value, length) {\n        return validations.isString(value) && value.length >= length;\n    },\n    maxStringLength: function maxStringLength(value, length) {\n        return validations.isString(value) && value.length <= length;\n    },\n\n    // eslint-disable-next-line no-undef\n    isFile: function isFile(value) {\n        return value instanceof File;\n    },\n    maxFileSize: function maxFileSize(value, max) {\n        return validations.isFile(value) && value.size <= parseInt(max, 10);\n    },\n    allowedExtensions: function allowedExtensions(value, fileTypes) {\n        return validations.isFile(value) && fileTypes.split(',').indexOf(value.type) !== -1;\n    }\n};\n\nmodule.exports = validations;"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/react-form-validator-core/lib/ValidationRules.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/react-form-validator-core/lib/ValidationRules.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/react-form-validator-core/lib/ValidationRules.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/react-form-validator-core/lib/ValidationRules.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/react-form-validator-core/lib/ValidationRules.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/react-form-validator-core/lib/ValidationRules.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/react-form-validator-core/lib/ValidationRules.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/react-form-validator-core/lib/ValidationRules.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/react-form-validator-core/lib/ValidationRules.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/react-form-validator-core/lib/ValidationRules.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/react-form-validator-core/lib/ValidationRules.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/react-form-validator-core/lib/ValidationRules.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/react-form-validator-core/lib/ValidationRules.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/react-form-validator-core/lib/ValidationRules.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/react-form-validator-core/lib/ValidationRules.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/react-form-validator-core/lib/ValidationRules.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/react-form-validator-core/lib/ValidationRules.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/react-form-validator-core/lib/ValidationRules.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/react-form-validator-core/lib/ValidationRules.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/react-form-validator-core/lib/ValidationRules.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/react-form-validator-core/lib/ValidationRules.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/react-form-validator-core/lib/ValidationRules.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/react-form-validator-core/lib/ValidationRules.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/react-form-validator-core/lib/ValidationRules.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/react-form-validator-core/lib/ValidationRules.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/react-form-validator-core/lib/ValidationRules.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/react-form-validator-core/lib/ValidationRules.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/react-form-validator-core/lib/ValidationRules.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/react-form-validator-core/lib/ValidationRules.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/react-form-validator-core/lib/ValidationRules.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/react-form-validator-core/lib/ValidationRules.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/react-form-validator-core/lib/ValidationRules.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/react-form-validator-core/lib/ValidationRules.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/react-form-validator-core/lib/ValidationRules.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/react-form-validator-core/lib/ValidationRules.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/react-form-validator-core/lib/ValidationRules.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/react-form-validator-core/lib/ValidationRules.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/react-form-validator-core/lib/ValidationRules.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/react-form-validator-core/lib/ValidationRules.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/react-form-validator-core/lib/ValidationRules.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/react-form-validator-core/lib/ValidationRules.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/react-form-validator-core/lib/ValidationRules.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/react-form-validator-core/lib/ValidationRules.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/react-form-validator-core/lib/ValidationRules.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/react-form-validator-core/lib/ValidationRules.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/react-form-validator-core/lib/ValidationRules.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/react-form-validator-core/lib/ValidationRules.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/react-form-validator-core/lib/ValidationRules.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/react-form-validator-core/lib/ValidationRules.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/react-form-validator-core/lib/ValidationRules.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/react-form-validator-core/lib/ValidationRules.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/react-form-validator-core/lib/ValidationRules.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/react-form-validator-core/lib/ValidationRules.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/react-form-validator-core/lib/ValidationRules.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/react-form-validator-core/lib/ValidationRules.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/react-form-validator-core/lib/ValidationRules.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/react-form-validator-core/lib/ValidationRules.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/react-form-validator-core/lib/ValidationRules.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/react-form-validator-core/lib/ValidationRules.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/react-form-validator-core/lib/ValidationRules.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/react-form-validator-core/lib/ValidationRules.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/react-form-validator-core/lib/ValidationRules.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/react-form-validator-core/lib/ValidationRules.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/react-form-validator-core/lib/ValidationRules.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/react-form-validator-core/lib/ValidationRules.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/react-form-validator-core/lib/ValidationRules.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/react-form-validator-core/lib/ValidationRules.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/react-form-validator-core/lib/ValidationRules.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/react-form-validator-core/lib/ValidationRules.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/react-form-validator-core/lib/ValidationRules.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/react-form-validator-core/lib/ValidationRules.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/react-form-validator-core/lib/ValidationRules.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/react-form-validator-core/lib/ValidationRules.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/react-form-validator-core/lib/ValidationRules.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/react-form-validator-core/lib/ValidationRules.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/react-form-validator-core/lib/ValidationRules.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/react-form-validator-core/lib/ValidationRules.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/react-form-validator-core/lib/ValidationRules.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/react-form-validator-core/lib/ValidationRules.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/react-form-validator-core/lib/ValidationRules.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/react-form-validator-core/lib/ValidationRules.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/react-form-validator-core/lib/ValidationRules.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/react-form-validator-core/lib/ValidationRules.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/react-form-validator-core/lib/ValidationRules.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/react-form-validator-core/lib/ValidationRules.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/react-form-validator-core/lib/ValidationRules.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/react-form-validator-core/lib/ValidationRules.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/react-form-validator-core/lib/ValidationRules.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/react-form-validator-core/lib/ValidationRules.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/react-form-validator-core/lib/ValidationRules.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/react-form-validator-core/lib/ValidationRules.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/react-form-validator-core/lib/ValidationRules.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/react-form-validator-core/lib/ValidationRules.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/react-form-validator-core/lib/ValidationRules.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/react-form-validator-core/lib/ValidationRules.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/react-form-validator-core/lib/ValidationRules.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/react-form-validator-core/lib/ValidationRules.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}}],"sources":{"../node_modules/react-form-validator-core/lib/ValidationRules.js":"'use strict';\n\nvar isExisty = function isExisty(value) {\n    return value !== null && value !== undefined;\n};\n\nvar _isEmpty = function _isEmpty(value) {\n    if (value instanceof Array) {\n        return value.length === 0;\n    }\n    return value === '' || !isExisty(value);\n};\n\nvar isEmptyTrimed = function isEmptyTrimed(value) {\n    if (typeof value === 'string') {\n        return value.trim() === '';\n    }\n    return true;\n};\n\nvar validations = {\n    matchRegexp: function matchRegexp(value, regexp) {\n        var validationRegexp = regexp instanceof RegExp ? regexp : new RegExp(regexp);\n        return _isEmpty(value) || validationRegexp.test(value);\n    },\n\n    // eslint-disable-next-line\n    isEmail: function isEmail(value) {\n        return validations.matchRegexp(value, /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))$/i);\n    },\n\n    isEmpty: function isEmpty(value) {\n        return _isEmpty(value);\n    },\n\n    required: function required(value) {\n        return !_isEmpty(value);\n    },\n\n    trim: function trim(value) {\n        return !isEmptyTrimed(value);\n    },\n\n    isNumber: function isNumber(value) {\n        return validations.matchRegexp(value, /^-?[0-9]\\d*(\\d+)?$/i);\n    },\n\n    isFloat: function isFloat(value) {\n        return validations.matchRegexp(value, /^(?:-?[1-9]\\d*|-?0)?(?:\\.\\d+)?$/i);\n    },\n\n    isPositive: function isPositive(value) {\n        if (isExisty(value)) {\n            return (validations.isNumber(value) || validations.isFloat(value)) && value >= 0;\n        }\n        return true;\n    },\n\n    maxNumber: function maxNumber(value, max) {\n        return _isEmpty(value) || parseInt(value, 10) <= parseInt(max, 10);\n    },\n\n    minNumber: function minNumber(value, min) {\n        return _isEmpty(value) || parseInt(value, 10) >= parseInt(min, 10);\n    },\n\n    maxFloat: function maxFloat(value, max) {\n        return _isEmpty(value) || parseFloat(value) <= parseFloat(max);\n    },\n\n    minFloat: function minFloat(value, min) {\n        return _isEmpty(value) || parseFloat(value) >= parseFloat(min);\n    },\n\n    isString: function isString(value) {\n        return !_isEmpty(value) || typeof value === 'string' || value instanceof String;\n    },\n    minStringLength: function minStringLength(value, length) {\n        return validations.isString(value) && value.length >= length;\n    },\n    maxStringLength: function maxStringLength(value, length) {\n        return validations.isString(value) && value.length <= length;\n    },\n\n    // eslint-disable-next-line no-undef\n    isFile: function isFile(value) {\n        return value instanceof File;\n    },\n    maxFileSize: function maxFileSize(value, max) {\n        return validations.isFile(value) && value.size <= parseInt(max, 10);\n    },\n    allowedExtensions: function allowedExtensions(value, fileTypes) {\n        return validations.isFile(value) && fileTypes.split(',').indexOf(value.type) !== -1;\n    }\n};\n\nmodule.exports = validations;"},"lineCount":97}},"error":null,"hash":"f1c75dba163d8200a4a31f6b00f25a0b","cacheData":{"env":{}}}