{"id":"../node_modules/tubular-react/dist/DataGrid/DataGrid.js","dependencies":[{"name":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\tubular-react\\dist\\DataGrid\\DataGrid.js.map","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\tubular-react\\src\\DataGrid\\DataGrid.tsx","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\package.json","includedInParent":true,"mtime":1567469419529},{"name":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\tubular-react\\package.json","includedInParent":true,"mtime":1567480634804},{"name":"@material-ui/core/GridList","loc":{"line":3,"column":25},"parent":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\tubular-react\\dist\\DataGrid\\DataGrid.js","resolved":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\@material-ui\\core\\esm\\GridList\\index.js"},{"name":"@material-ui/core/Paper","loc":{"line":4,"column":22},"parent":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\tubular-react\\dist\\DataGrid\\DataGrid.js","resolved":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\@material-ui\\core\\esm\\Paper\\index.js"},{"name":"@material-ui/core/Table","loc":{"line":5,"column":22},"parent":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\tubular-react\\dist\\DataGrid\\DataGrid.js","resolved":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\@material-ui\\core\\esm\\Table\\index.js"},{"name":"@material-ui/core/TableHead","loc":{"line":6,"column":26},"parent":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\tubular-react\\dist\\DataGrid\\DataGrid.js","resolved":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\@material-ui\\core\\esm\\TableHead\\index.js"},{"name":"@material-ui/core/TableRow","loc":{"line":7,"column":25},"parent":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\tubular-react\\dist\\DataGrid\\DataGrid.js","resolved":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\@material-ui\\core\\esm\\TableRow\\index.js"},{"name":"@material-ui/styles/makeStyles","loc":{"line":8,"column":27},"parent":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\tubular-react\\dist\\DataGrid\\DataGrid.js","resolved":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\@material-ui\\styles\\esm\\makeStyles\\index.js"},{"name":"react","loc":{"line":9,"column":20},"parent":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\tubular-react\\dist\\DataGrid\\DataGrid.js","resolved":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\react\\index.js"},{"name":"uno-material-ui","loc":{"line":10,"column":32},"parent":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\tubular-react\\dist\\DataGrid\\DataGrid.js","resolved":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\uno-material-ui\\dist\\index.js"},{"name":"uno-react","loc":{"line":11,"column":26},"parent":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\tubular-react\\dist\\DataGrid\\DataGrid.js","resolved":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\uno-react\\lib\\index.js"},{"name":"../Hooks/useDataGrid","loc":{"line":12,"column":28},"parent":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\tubular-react\\dist\\DataGrid\\DataGrid.js","resolved":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\tubular-react\\dist\\Hooks\\useDataGrid.js"},{"name":"../Pagination","loc":{"line":13,"column":27},"parent":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\tubular-react\\dist\\DataGrid\\DataGrid.js","resolved":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\tubular-react\\dist\\Pagination\\index.js"},{"name":"../Toolbar/GridToolbar","loc":{"line":14,"column":28},"parent":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\tubular-react\\dist\\DataGrid\\DataGrid.js","resolved":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\tubular-react\\dist\\Toolbar\\GridToolbar.js"},{"name":"../Toolbar/ToolbarOptions","loc":{"line":15,"column":31},"parent":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\tubular-react\\dist\\DataGrid\\DataGrid.js","resolved":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\tubular-react\\dist\\Toolbar\\ToolbarOptions.js"},{"name":"./","loc":{"line":16,"column":17},"parent":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\tubular-react\\dist\\DataGrid\\DataGrid.js","resolved":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\tubular-react\\dist\\DataGrid\\index.js"}],"generated":{"js":"\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar GridList_1 = require(\"@material-ui/core/GridList\");\r\nvar Paper_1 = require(\"@material-ui/core/Paper\");\r\nvar Table_1 = require(\"@material-ui/core/Table\");\r\nvar TableHead_1 = require(\"@material-ui/core/TableHead\");\r\nvar TableRow_1 = require(\"@material-ui/core/TableRow\");\r\nvar makeStyles_1 = require(\"@material-ui/styles/makeStyles\");\r\nvar React = require(\"react\");\r\nvar uno_material_ui_1 = require(\"uno-material-ui\");\r\nvar uno_react_1 = require(\"uno-react\");\r\nvar useDataGrid_1 = require(\"../Hooks/useDataGrid\");\r\nvar Pagination_1 = require(\"../Pagination\");\r\nvar GridToolbar_1 = require(\"../Toolbar/GridToolbar\");\r\nvar ToolbarOptions_1 = require(\"../Toolbar/ToolbarOptions\");\r\nvar _1 = require(\"./\");\r\nvar useStyles = makeStyles_1.default({\r\n    linearProgress: {\r\n        marginTop: '-10px',\r\n    },\r\n    root: {\r\n        overflowX: 'auto',\r\n        width: '100%',\r\n    },\r\n});\r\nvar outerWidth = 800;\r\nvar timeout = 400;\r\nexports.DataGrid = function (props) {\r\n    var bodyRenderer = props.bodyRenderer, columns = props.columns, deps = props.deps, footerRenderer = props.footerRenderer, dataSource = props.dataSource, _a = props.toolbarOptions, toolbarOptions = _a === void 0 ? props.toolbarOptions || new ToolbarOptions_1.ToolbarOptions() : _a, gridName = props.gridName, onError = props.onError, onRowClick = props.onRowClick, storage = props.storage;\r\n    var classes = useStyles({});\r\n    var gridConfig = {\r\n        gridName: gridName,\r\n        itemsPerPage: toolbarOptions.itemsPerPage,\r\n        onError: onError,\r\n        storage: storage,\r\n    };\r\n    var grid = useDataGrid_1.default(columns, gridConfig, dataSource, deps);\r\n    var isMobileResolution = uno_react_1.useResolutionSwitch(outerWidth, timeout)[0];\r\n    if (isMobileResolution) {\r\n        toolbarOptions.advancePagination = false;\r\n        toolbarOptions.bottomPager = false;\r\n        toolbarOptions.exportButton = false;\r\n        toolbarOptions.printButton = false;\r\n        toolbarOptions.rowsPerPageOptions = [5, 10];\r\n        toolbarOptions.topPager = false;\r\n        return (React.createElement(Paper_1.default, { className: classes.root },\r\n            React.createElement(GridToolbar_1.GridToolbar, { toolbarOptions: toolbarOptions, grid: grid, gridName: gridName }),\r\n            React.createElement(uno_material_ui_1.FixedLinearProgress, { isLoading: grid.state.isLoading }),\r\n            React.createElement(GridList_1.default, { cellHeight: 'auto', cols: 1 }, grid.state.data.map(function (row, index) {\r\n                return (React.createElement(_1.DataGridCard, { columns: grid.state.columns, item: row, onClickCallback: onRowClick, key: index }));\r\n            })),\r\n            React.createElement(Pagination_1.Paginator, { advancePagination: toolbarOptions.advancePagination, rowsPerPageOptions: toolbarOptions.rowsPerPageOptions, grid: grid })));\r\n    }\r\n    var paginator = function (position) { return (React.createElement(Table_1.default, { \"data-testid\": position + \"-paginator\" },\r\n        React.createElement(TableHead_1.default, null,\r\n            React.createElement(TableRow_1.default, null,\r\n                React.createElement(Pagination_1.Paginator, { advancePagination: toolbarOptions.advancePagination, rowsPerPageOptions: toolbarOptions.rowsPerPageOptions, grid: grid }))))); };\r\n    return (React.createElement(Paper_1.default, { style: { overflowX: 'auto', width: '100%' } },\r\n        React.createElement(GridToolbar_1.GridToolbar, { gridName: gridName, toolbarOptions: toolbarOptions, grid: grid }),\r\n        toolbarOptions.topPager && paginator('top'),\r\n        React.createElement(\"div\", { className: classes.linearProgress, \"data-testid\": 'linear-progress' },\r\n            React.createElement(uno_material_ui_1.FixedLinearProgress, { isLoading: grid.state.isLoading })),\r\n        React.createElement(_1.DataGridTable, { grid: grid, bodyRenderer: bodyRenderer, footerRenderer: footerRenderer, onRowClick: onRowClick }),\r\n        toolbarOptions.bottomPager && paginator('bottom')));\r\n};\r\n"},"sourceMaps":{"js":{"version":3,"file":"DataGrid.js","sourceRoot":"","sources":["../../src/DataGrid/DataGrid.tsx"],"names":[],"mappings":"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","sourcesContent":["import GridList from '@material-ui/core/GridList';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport makeStyles from '@material-ui/styles/makeStyles';\r\nimport * as React from 'react';\r\nimport { ColumnModel } from 'tubular-common';\r\nimport { FixedLinearProgress } from 'uno-material-ui';\r\nimport { useResolutionSwitch } from 'uno-react';\r\nimport { IDataGridStorage } from '../DataGridInterfaces';\r\nimport { IDataGridConfig } from '../DataGridInterfaces/IDataGridConfig';\r\nimport useDataGrid from '../Hooks/useDataGrid';\r\nimport { Paginator } from '../Pagination';\r\nimport { GridToolbar } from '../Toolbar/GridToolbar';\r\nimport { ToolbarOptions } from '../Toolbar/ToolbarOptions';\r\nimport ITubularHttpClient from '../utils/ITubularHttpClient';\r\nimport { DataGridCard, DataGridTable } from './';\r\n\r\nconst useStyles = makeStyles({\r\n  linearProgress: {\r\n    marginTop: '-10px',\r\n  },\r\n  root: {\r\n    overflowX: 'auto',\r\n    width: '100%',\r\n  },\r\n});\r\n\r\nconst outerWidth = 800;\r\nconst timeout = 400;\r\n\r\ninterface IProps {\r\n  columns: ColumnModel[];\r\n  dataSource: any[] | string | Request | ITubularHttpClient;\r\n  deps?: any[];\r\n  gridName: string;\r\n  storage?: IDataGridStorage;\r\n  toolbarOptions?: ToolbarOptions;\r\n  bodyRenderer?(\r\n    row: any,\r\n    index: number,\r\n    columns: ColumnModel[],\r\n    onRowClickProxy: (row: any) => void,\r\n  ): React.ReactNode;\r\n  footerRenderer?(aggregate: any): React.ReactNode;\r\n  onError?(err: any): void;\r\n  onRowClick?(row: any): void;\r\n}\r\n\r\nexport const DataGrid: React.FunctionComponent<IProps> = (props) => {\r\n  const {\r\n    bodyRenderer,\r\n    columns,\r\n    deps,\r\n    footerRenderer,\r\n    dataSource,\r\n    toolbarOptions = props.toolbarOptions || new ToolbarOptions(),\r\n    gridName,\r\n    onError,\r\n    onRowClick,\r\n    storage,\r\n  } = props;\r\n\r\n  const classes = useStyles({});\r\n  const gridConfig: Partial<IDataGridConfig> = {\r\n    gridName,\r\n    itemsPerPage: toolbarOptions.itemsPerPage,\r\n    onError,\r\n    storage,\r\n  };\r\n\r\n  const grid = useDataGrid(columns, gridConfig, dataSource, deps);\r\n  const [isMobileResolution] = useResolutionSwitch(outerWidth, timeout);\r\n\r\n  if (isMobileResolution) {\r\n    toolbarOptions.advancePagination = false;\r\n    toolbarOptions.bottomPager = false;\r\n    toolbarOptions.exportButton = false;\r\n    toolbarOptions.printButton = false;\r\n    toolbarOptions.rowsPerPageOptions = [5, 10];\r\n    toolbarOptions.topPager = false;\r\n\r\n    return (\r\n      <Paper className={classes.root}>\r\n        <GridToolbar toolbarOptions={toolbarOptions} grid={grid} gridName={gridName} />\r\n        <FixedLinearProgress isLoading={grid.state.isLoading} />\r\n        <GridList\r\n          cellHeight='auto'\r\n          cols={1}\r\n        >\r\n          {\r\n            grid.state.data.map((row: any, index: number) =>\r\n              (\r\n                <DataGridCard\r\n                  columns={grid.state.columns}\r\n                  item={row}\r\n                  onClickCallback={onRowClick}\r\n                  key={index}\r\n                />\r\n              ))\r\n          }\r\n        </GridList>\r\n        <Paginator\r\n          advancePagination={toolbarOptions.advancePagination}\r\n          rowsPerPageOptions={toolbarOptions.rowsPerPageOptions}\r\n          grid={grid}\r\n        />\r\n      </Paper>\r\n    );\r\n  }\r\n\r\n  const paginator = (position: string) => (\r\n    <Table data-testid={`${position}-paginator`}>\r\n      <TableHead>\r\n        <TableRow>\r\n          <Paginator\r\n            advancePagination={toolbarOptions.advancePagination}\r\n            rowsPerPageOptions={toolbarOptions.rowsPerPageOptions}\r\n            grid={grid}\r\n          />\r\n        </TableRow>\r\n      </TableHead>\r\n    </Table>\r\n  );\r\n\r\n  return (\r\n    <Paper style={{ overflowX: 'auto', width: '100%' }}>\r\n      <GridToolbar gridName={gridName} toolbarOptions={toolbarOptions} grid={grid} />\r\n      {toolbarOptions.topPager && paginator('top')}\r\n      <div className={classes.linearProgress} data-testid='linear-progress'>\r\n        <FixedLinearProgress isLoading={grid.state.isLoading} />\r\n      </div>\r\n      <DataGridTable\r\n        grid={grid}\r\n        bodyRenderer={bodyRenderer}\r\n        footerRenderer={footerRenderer}\r\n        onRowClick={onRowClick}\r\n      />\r\n      {toolbarOptions.bottomPager && paginator('bottom')}\r\n    </Paper>\r\n  );\r\n};\r\n"]}},"error":null,"hash":"d5100c9cddac124f172ea0336ad0b7ac","cacheData":{"env":{}}}