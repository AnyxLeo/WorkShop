{"id":"../node_modules/tubular-react/dist/DataGrid/DataGridCard.js","dependencies":[{"name":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\tubular-react\\dist\\DataGrid\\DataGridCard.js.map","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\tubular-react\\src\\DataGrid\\DataGridCard.tsx","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\package.json","includedInParent":true,"mtime":1567469419529},{"name":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\tubular-react\\package.json","includedInParent":true,"mtime":1567480634804},{"name":"@material-ui/core/Card","loc":{"line":3,"column":21},"parent":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\tubular-react\\dist\\DataGrid\\DataGridCard.js","resolved":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\@material-ui\\core\\esm\\Card\\index.js"},{"name":"@material-ui/core/CardActions","loc":{"line":4,"column":28},"parent":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\tubular-react\\dist\\DataGrid\\DataGridCard.js","resolved":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\@material-ui\\core\\esm\\CardActions\\index.js"},{"name":"@material-ui/core/CardContent","loc":{"line":5,"column":28},"parent":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\tubular-react\\dist\\DataGrid\\DataGridCard.js","resolved":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\@material-ui\\core\\esm\\CardContent\\index.js"},{"name":"@material-ui/core/IconButton","loc":{"line":6,"column":27},"parent":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\tubular-react\\dist\\DataGrid\\DataGridCard.js","resolved":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\@material-ui\\core\\esm\\IconButton\\index.js"},{"name":"@material-ui/core/Typography","loc":{"line":7,"column":27},"parent":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\tubular-react\\dist\\DataGrid\\DataGridCard.js","resolved":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\@material-ui\\core\\esm\\Typography\\index.js"},{"name":"@material-ui/icons/LabelImportant","loc":{"line":8,"column":31},"parent":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\tubular-react\\dist\\DataGrid\\DataGridCard.js","resolved":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\@material-ui\\icons\\LabelImportant.js"},{"name":"@material-ui/styles/makeStyles","loc":{"line":9,"column":27},"parent":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\tubular-react\\dist\\DataGrid\\DataGridCard.js","resolved":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\@material-ui\\styles\\esm\\makeStyles\\index.js"},{"name":"react","loc":{"line":10,"column":20},"parent":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\tubular-react\\dist\\DataGrid\\DataGridCard.js","resolved":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\react\\index.js"},{"name":"tubular-common","loc":{"line":11,"column":31},"parent":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\tubular-react\\dist\\DataGrid\\DataGridCard.js","resolved":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\tubular-common\\dist\\index.js"},{"name":"uno-react","loc":{"line":12,"column":26},"parent":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\tubular-react\\dist\\DataGrid\\DataGridCard.js","resolved":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\uno-react\\lib\\index.js"}],"generated":{"js":"\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Card_1 = require(\"@material-ui/core/Card\");\r\nvar CardActions_1 = require(\"@material-ui/core/CardActions\");\r\nvar CardContent_1 = require(\"@material-ui/core/CardContent\");\r\nvar IconButton_1 = require(\"@material-ui/core/IconButton\");\r\nvar Typography_1 = require(\"@material-ui/core/Typography\");\r\nvar LabelImportant_1 = require(\"@material-ui/icons/LabelImportant\");\r\nvar makeStyles_1 = require(\"@material-ui/styles/makeStyles\");\r\nvar React = require(\"react\");\r\nvar tubular_common_1 = require(\"tubular-common\");\r\nvar uno_react_1 = require(\"uno-react\");\r\nvar useStyles = makeStyles_1.default(function (_a) {\r\n    var palette = _a.palette;\r\n    return ({\r\n        cardActions: {\r\n            justifyContent: 'flex-end',\r\n            paddingTop: 0,\r\n        },\r\n        cardBtn: {\r\n            color: palette.primary.dark,\r\n            textDecoration: 'none',\r\n        },\r\n        cardMobile: {\r\n            marginBottom: '2px',\r\n            marginLeft: '10px',\r\n            marginRight: '10px',\r\n            maxHeight: '400px',\r\n            minHeight: '200px',\r\n            minWidth: '95%',\r\n        },\r\n        dataLabel: {\r\n            flexDirection: 'column',\r\n            flexGrow: 1,\r\n            fontWeight: 'bold',\r\n            margin: '4px',\r\n            textAlign: 'right',\r\n            width: '50%',\r\n        },\r\n        dataRow: {\r\n            display: 'flex',\r\n            flexDirection: 'row',\r\n            justifyContent: 'flex-start ',\r\n        },\r\n        dataValue: {\r\n            flexDirection: 'column',\r\n            flexGrow: 1,\r\n            margin: '2px',\r\n            textAlign: 'left',\r\n            width: '50%',\r\n        },\r\n    });\r\n});\r\nexports.DataGridCard = function (props) {\r\n    var columns = props.columns, item = props.item, onClickCallback = props.onClickCallback;\r\n    var classes = useStyles({});\r\n    return (React.createElement(Card_1.default, { className: classes.cardMobile },\r\n        React.createElement(CardContent_1.default, null,\r\n            columns.map(function (column, index) { return (React.createElement(\"div\", { className: classes.dataRow, key: index },\r\n                React.createElement(Typography_1.default, { component: 'div', variant: 'body2', color: 'textSecondary', className: classes.dataLabel },\r\n                    uno_react_1.humanize(column.Name),\r\n                    \":\"),\r\n                React.createElement(Typography_1.default, { component: 'div', variant: 'body2', color: 'textSecondary', className: classes.dataValue }, column.DataType === tubular_common_1.ColumnDataType.BOOLEAN ?\r\n                    React.createElement(\"input\", { type: 'checkbox', checked: item[column.Name], disabled: true })\r\n                    : column.DataType === tubular_common_1.ColumnDataType.STRING ?\r\n                        item[column.Name].length > 50 ? item[column.Name].substring(0, 50) + '...'\r\n                            : item[column.Name]\r\n                        : item[column.Name]))); }),\r\n            React.createElement(CardActions_1.default, { className: classes.cardActions }, onClickCallback &&\r\n                React.createElement(IconButton_1.default, { className: classes.cardBtn, color: 'default', onClick: onClickCallback, size: 'small' },\r\n                    React.createElement(LabelImportant_1.default, null))))));\r\n};\r\n"},"sourceMaps":{"js":{"version":3,"file":"DataGridCard.js","sourceRoot":"","sources":["../../src/DataGrid/DataGridCard.tsx"],"names":[],"mappings":";;AAAA,+CAA0C;AAC1C,6DAAwD;AACxD,6DAAwD;AACxD,2DAAsD;AACtD,2DAAsD;AACtD,oEAA+D;AAC/D,6DAAwD;AACxD,6BAA+B;AAC/B,iDAA6D;AAC7D,uCAAqC;AAErC,IAAM,SAAS,GAAG,oBAAU,CAAC,UAAC,EAAgB;QAAd,oBAAO;IAAY,OAAA,CAAC;QAChD,WAAW,EAAE;YACT,cAAc,EAAE,UAAU;YAC1B,UAAU,EAAE,CAAC;SAChB;QACD,OAAO,EAAE;YACL,KAAK,EAAE,OAAO,CAAC,OAAO,CAAC,IAAI;YAC3B,cAAc,EAAE,MAAM;SACzB;QACD,UAAU,EAAE;YACR,YAAY,EAAE,KAAK;YACnB,UAAU,EAAE,MAAM;YAClB,WAAW,EAAE,MAAM;YACnB,SAAS,EAAE,OAAO;YAClB,SAAS,EAAE,OAAO;YAClB,QAAQ,EAAE,KAAK;SAClB;QACD,SAAS,EAAE;YACP,aAAa,EAAE,QAAQ;YACvB,QAAQ,EAAE,CAAC;YACX,UAAU,EAAE,MAAM;YAClB,MAAM,EAAE,KAAK;YACb,SAAS,EAAE,OAAO;YAClB,KAAK,EAAE,KAAK;SACf;QACD,OAAO,EAAE;YACL,OAAO,EAAE,MAAM;YACf,aAAa,EAAE,KAAK;YACpB,cAAc,EAAE,aAAa;SAChC;QACD,SAAS,EAAE;YACP,aAAa,EAAE,QAAQ;YACvB,QAAQ,EAAE,CAAC;YACX,MAAM,EAAE,KAAK;YACb,SAAS,EAAE,MAAM;YACjB,KAAK,EAAE,KAAK;SACf;KACJ,CAAC;AArCiD,CAqCjD,CAAC,CAAC;AAES,QAAA,YAAY,GAAG,UAAC,KAAK;IACtB,IAAA,uBAAO,EAAE,iBAAI,EAAE,uCAAe,CAAW;IACjD,IAAM,OAAO,GAAG,SAAS,CAAC,EAAE,CAAC,CAAC;IAE9B,OAAO,CACH,oBAAC,cAAI,IAAC,SAAS,EAAE,OAAO,CAAC,UAAU;QAC/B,oBAAC,qBAAW;YAEJ,OAAO,CAAC,GAAG,CAAC,UAAC,MAAmB,EAAE,KAAa,IAAK,OAAA,CAChD,6BAAK,SAAS,EAAE,OAAO,CAAC,OAAO,EAAE,GAAG,EAAE,KAAK;gBACvC,oBAAC,oBAAU,IACP,SAAS,EAAC,KAAK,EACf,OAAO,EAAC,OAAO,EACf,KAAK,EAAC,eAAe,EACrB,SAAS,EAAE,OAAO,CAAC,SAAS;oBAE3B,oBAAQ,CAAC,MAAM,CAAC,IAAI,CAAC;wBACb;gBACb,oBAAC,oBAAU,IACP,SAAS,EAAC,KAAK,EACf,OAAO,EAAC,OAAO,EACf,KAAK,EAAC,eAAe,EACrB,SAAS,EAAE,OAAO,CAAC,SAAS,IAGxB,MAAM,CAAC,QAAQ,KAAK,+BAAc,CAAC,OAAO,CAAC,CAAC;oBACxC,+BAAO,IAAI,EAAC,UAAU,EAAC,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,QAAQ,EAAE,IAAI,GAAI;oBACrE,CAAC,CAAC,MAAM,CAAC,QAAQ,KAAK,+BAAc,CAAC,MAAM,CAAC,CAAC;wBACzC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,MAAM,GAAG,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,KAAK;4BACtE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;wBACvB,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAEtB,CACX,CACT,EA1BmD,CA0BnD,CAAC;YAEN,oBAAC,qBAAW,IAAC,SAAS,EAAE,OAAO,CAAC,WAAW,IACtC,eAAe;gBACZ,oBAAC,oBAAU,IACP,SAAS,EAAE,OAAO,CAAC,OAAO,EAC1B,KAAK,EAAC,SAAS,EACf,OAAO,EAAE,eAAe,EACxB,IAAI,EAAC,OAAO;oBAEZ,oBAAC,wBAAc,OAAG,CACT,CAEP,CACJ,CACX,CACV,CAAC;AACN,CAAC,CAAC","sourcesContent":["import Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport LabelImportant from '@material-ui/icons/LabelImportant';\r\nimport makeStyles from '@material-ui/styles/makeStyles';\r\nimport * as React from 'react';\r\nimport { ColumnDataType, ColumnModel } from 'tubular-common';\r\nimport { humanize } from 'uno-react';\r\n\r\nconst useStyles = makeStyles(({ palette }: any) => ({\r\n    cardActions: {\r\n        justifyContent: 'flex-end',\r\n        paddingTop: 0,\r\n    },\r\n    cardBtn: {\r\n        color: palette.primary.dark,\r\n        textDecoration: 'none',\r\n    },\r\n    cardMobile: {\r\n        marginBottom: '2px',\r\n        marginLeft: '10px',\r\n        marginRight: '10px',\r\n        maxHeight: '400px',\r\n        minHeight: '200px',\r\n        minWidth: '95%',\r\n    },\r\n    dataLabel: {\r\n        flexDirection: 'column',\r\n        flexGrow: 1,\r\n        fontWeight: 'bold',\r\n        margin: '4px',\r\n        textAlign: 'right',\r\n        width: '50%',\r\n    },\r\n    dataRow: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'flex-start ',\r\n    },\r\n    dataValue: {\r\n        flexDirection: 'column',\r\n        flexGrow: 1,\r\n        margin: '2px',\r\n        textAlign: 'left',\r\n        width: '50%',\r\n    },\r\n}));\r\n\r\nexport const DataGridCard = (props) => {\r\n    const { columns, item, onClickCallback } = props;\r\n    const classes = useStyles({});\r\n\r\n    return (\r\n        <Card className={classes.cardMobile}>\r\n            <CardContent>\r\n                {\r\n                    columns.map((column: ColumnModel, index: number) => (\r\n                        <div className={classes.dataRow} key={index}>\r\n                            <Typography\r\n                                component='div'\r\n                                variant='body2'\r\n                                color='textSecondary'\r\n                                className={classes.dataLabel}\r\n                            >\r\n                                {humanize(column.Name)}:\r\n                            </Typography>\r\n                            <Typography\r\n                                component='div'\r\n                                variant='body2'\r\n                                color='textSecondary'\r\n                                className={classes.dataValue}\r\n                            >\r\n                                {\r\n                                    column.DataType === ColumnDataType.BOOLEAN ?\r\n                                        <input type='checkbox' checked={item[column.Name]} disabled={true} />\r\n                                        : column.DataType === ColumnDataType.STRING ?\r\n                                            item[column.Name].length > 50 ? item[column.Name].substring(0, 50) + '...'\r\n                                                : item[column.Name]\r\n                                            : item[column.Name]\r\n                                }\r\n                            </Typography>\r\n                        </div>\r\n                    ))\r\n                }\r\n                <CardActions className={classes.cardActions}>\r\n                    {onClickCallback &&\r\n                        <IconButton\r\n                            className={classes.cardBtn}\r\n                            color='default'\r\n                            onClick={onClickCallback}\r\n                            size='small'\r\n                        >\r\n                            <LabelImportant />\r\n                        </IconButton>\r\n                    }\r\n                </CardActions>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n"]}},"error":null,"hash":"03cc8d1afff3472eb79b4b264c68918c","cacheData":{"env":{}}}