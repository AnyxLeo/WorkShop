{"id":"../node_modules/tubular-react/dist/Filtering/DialogModal.js","dependencies":[{"name":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\tubular-react\\dist\\Filtering\\DialogModal.js.map","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\tubular-react\\src\\Filtering\\DialogModal.tsx","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\package.json","includedInParent":true,"mtime":1567469419529},{"name":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\tubular-react\\package.json","includedInParent":true,"mtime":1567480634804},{"name":"@material-ui/core/Button","loc":{"line":3,"column":23},"parent":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\tubular-react\\dist\\Filtering\\DialogModal.js","resolved":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\@material-ui\\core\\esm\\Button\\index.js"},{"name":"@material-ui/core/Card","loc":{"line":4,"column":21},"parent":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\tubular-react\\dist\\Filtering\\DialogModal.js","resolved":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\@material-ui\\core\\esm\\Card\\index.js"},{"name":"@material-ui/core/CardActions","loc":{"line":5,"column":28},"parent":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\tubular-react\\dist\\Filtering\\DialogModal.js","resolved":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\@material-ui\\core\\esm\\CardActions\\index.js"},{"name":"@material-ui/core/CardContent","loc":{"line":6,"column":28},"parent":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\tubular-react\\dist\\Filtering\\DialogModal.js","resolved":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\@material-ui\\core\\esm\\CardContent\\index.js"},{"name":"@material-ui/core/Popover","loc":{"line":7,"column":24},"parent":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\tubular-react\\dist\\Filtering\\DialogModal.js","resolved":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\@material-ui\\core\\esm\\Popover\\index.js"},{"name":"react","loc":{"line":8,"column":20},"parent":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\tubular-react\\dist\\Filtering\\DialogModal.js","resolved":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\react\\index.js"},{"name":"./DialogInput","loc":{"line":9,"column":28},"parent":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\tubular-react\\dist\\Filtering\\DialogModal.js","resolved":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\tubular-react\\dist\\Filtering\\DialogInput.js"},{"name":"./OperatorsDropdown","loc":{"line":10,"column":34},"parent":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\tubular-react\\dist\\Filtering\\DialogModal.js","resolved":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\tubular-react\\dist\\Filtering\\OperatorsDropdown.js"},{"name":"tubular-common","loc":{"line":11,"column":31},"parent":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\tubular-react\\dist\\Filtering\\DialogModal.js","resolved":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\tubular-common\\dist\\index.js"}],"generated":{"js":"\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Button_1 = require(\"@material-ui/core/Button\");\r\nvar Card_1 = require(\"@material-ui/core/Card\");\r\nvar CardActions_1 = require(\"@material-ui/core/CardActions\");\r\nvar CardContent_1 = require(\"@material-ui/core/CardContent\");\r\nvar Popover_1 = require(\"@material-ui/core/Popover\");\r\nvar React = require(\"react\");\r\nvar DialogInput_1 = require(\"./DialogInput\");\r\nvar OperatorsDropdown_1 = require(\"./OperatorsDropdown\");\r\nvar tubular_common_1 = require(\"tubular-common\");\r\nvar createFilterPatch = function (activeColumn) {\r\n    var filterText = activeColumn.Filter.Text;\r\n    var filterArgument = activeColumn.Filter.Argument[0];\r\n    if (activeColumn.DataType === tubular_common_1.ColumnDataType.NUMERIC) {\r\n        filterText = parseFloat(filterText);\r\n        filterArgument = parseFloat(filterArgument);\r\n    }\r\n    else if (activeColumn.DataType === tubular_common_1.ColumnDataType.BOOLEAN) {\r\n        filterText = filterText === 'true';\r\n        filterArgument = '';\r\n    }\r\n    return {\r\n        Argument: [filterArgument],\r\n        HasFilter: true,\r\n        Operator: activeColumn.Filter.Operator || tubular_common_1.CompareOperators.AUTO,\r\n        Text: filterText,\r\n    };\r\n};\r\nvar clearFilterPatch = {\r\n    Argument: [''],\r\n    HasFilter: false,\r\n    Operator: tubular_common_1.CompareOperators.NONE,\r\n    Text: '',\r\n};\r\nexports.DialogModal = function (_a) {\r\n    var anchorFilter = _a.anchorFilter, activeColumn = _a.activeColumn, setAnchorFilter = _a.setAnchorFilter, setFilter = _a.setFilter, handleFilterChange = _a.handleFilterChange;\r\n    var clearFilter = function () { return setFilter(clearFilterPatch); };\r\n    var handleInput = function (e) { return handleFilterChange({ Text: e }); };\r\n    var handleBetweenInput = function (e) { return handleFilterChange({ Argument: [e] }); };\r\n    var submit = function () { return setFilter(createFilterPatch(activeColumn)); };\r\n    var onClose = function () { return setAnchorFilter(null); };\r\n    return (React.createElement(Popover_1.default, { open: Boolean(anchorFilter), onClose: onClose, anchorEl: anchorFilter, anchorOrigin: {\r\n            horizontal: 'center',\r\n            vertical: 'bottom',\r\n        }, transformOrigin: {\r\n            horizontal: 'center',\r\n            vertical: 'top',\r\n        } },\r\n        React.createElement(Card_1.default, null,\r\n            React.createElement(CardContent_1.default, null,\r\n                React.createElement(OperatorsDropdown_1.OperatorsDropdown, { activeColumn: activeColumn, handleFilterChange: handleFilterChange }),\r\n                React.createElement(DialogInput_1.DialogInput, { column: activeColumn, isPrimary: true, handleTextFieldChange: handleInput }),\r\n                activeColumn.Filter.Operator === tubular_common_1.CompareOperators.BETWEEN &&\r\n                    React.createElement(DialogInput_1.DialogInput, { column: activeColumn, isPrimary: false, handleTextFieldChange: handleBetweenInput })),\r\n            React.createElement(CardActions_1.default, null,\r\n                React.createElement(Button_1.default, { size: 'medium', color: 'secondary', onClick: clearFilter }, \"Clear\"),\r\n                React.createElement(Button_1.default, { size: 'medium', color: 'primary', onClick: submit, disabled: activeColumn.Filter.Operator === tubular_common_1.CompareOperators.NONE }, \"Apply\")))));\r\n};\r\n"},"sourceMaps":{"js":{"version":3,"file":"DialogModal.js","sourceRoot":"","sources":["../../src/Filtering/DialogModal.tsx"],"names":[],"mappings":"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","sourcesContent":["\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport * as React from 'react';\r\nimport { DialogInput } from './DialogInput';\r\nimport { OperatorsDropdown } from './OperatorsDropdown';\r\n\r\nimport { ColumnDataType, ColumnModel, CompareOperators } from 'tubular-common';\r\nimport { IFilterWrapper } from '../DataGridInterfaces/IFilterWrapper';\r\n\r\nconst createFilterPatch = (activeColumn: ColumnModel): IFilterWrapper => {\r\n    let filterText = activeColumn.Filter.Text;\r\n    let filterArgument = activeColumn.Filter.Argument[0];\r\n\r\n    if (activeColumn.DataType === ColumnDataType.NUMERIC) {\r\n        filterText = parseFloat(filterText);\r\n        filterArgument = parseFloat(filterArgument);\r\n    } else if (activeColumn.DataType === ColumnDataType.BOOLEAN) {\r\n        filterText = filterText === 'true';\r\n        filterArgument = '';\r\n    }\r\n\r\n    return {\r\n        Argument: [filterArgument],\r\n        HasFilter: true,\r\n        Operator: activeColumn.Filter.Operator || CompareOperators.AUTO,\r\n        Text: filterText,\r\n    };\r\n};\r\n\r\nconst clearFilterPatch: IFilterWrapper = {\r\n    Argument: [''],\r\n    HasFilter: false,\r\n    Operator: CompareOperators.NONE,\r\n    Text: '',\r\n};\r\n\r\ninterface IDialogModalProps {\r\n    anchorFilter: HTMLElement;\r\n    activeColumn: ColumnModel;\r\n    setAnchorFilter: (anchorEl: HTMLElement) => void;\r\n    setFilter: (filter: IFilterWrapper) => void;\r\n    handleFilterChange: (value: IFilterWrapper | any) => any;\r\n}\r\n\r\nexport const DialogModal: React.FunctionComponent<IDialogModalProps> =\r\n    ({ anchorFilter, activeColumn, setAnchorFilter, setFilter, handleFilterChange }) => {\r\n        const clearFilter = () => setFilter(clearFilterPatch);\r\n        const handleInput = (e: any) => handleFilterChange({ Text: e });\r\n        const handleBetweenInput = (e: any) => handleFilterChange({ Argument: [e] });\r\n        const submit = () => setFilter(createFilterPatch(activeColumn));\r\n        const onClose = () => setAnchorFilter(null);\r\n\r\n        return (\r\n            <Popover\r\n                open={Boolean(anchorFilter)}\r\n                onClose={onClose}\r\n                anchorEl={anchorFilter}\r\n                anchorOrigin={{\r\n                    horizontal: 'center',\r\n                    vertical: 'bottom',\r\n                }}\r\n                transformOrigin={{\r\n                    horizontal: 'center',\r\n                    vertical: 'top',\r\n                }}\r\n            >\r\n                <Card >\r\n                    <CardContent>\r\n                        <OperatorsDropdown activeColumn={activeColumn} handleFilterChange={handleFilterChange} />\r\n                        <DialogInput\r\n                            column={activeColumn}\r\n                            isPrimary={true}\r\n                            handleTextFieldChange={handleInput}\r\n                        />\r\n\r\n                        {activeColumn.Filter.Operator === CompareOperators.BETWEEN &&\r\n                            <DialogInput\r\n                                column={activeColumn}\r\n                                isPrimary={false}\r\n                                handleTextFieldChange={handleBetweenInput}\r\n                            />}\r\n                    </CardContent>\r\n                    <CardActions>\r\n                        <Button\r\n                            size='medium'\r\n                            color='secondary'\r\n                            onClick={clearFilter}\r\n                        >\r\n                            Clear\r\n                        </Button>\r\n                        <Button\r\n                            size='medium'\r\n                            color='primary'\r\n                            onClick={submit}\r\n                            disabled={activeColumn.Filter.Operator === CompareOperators.NONE}\r\n                        >\r\n                            Apply\r\n                        </Button>\r\n                    </CardActions>\r\n                </Card>\r\n            </Popover>\r\n        );\r\n    };\r\n"]}},"error":null,"hash":"4e5c76f9048addb529786a94cb797b4d","cacheData":{"env":{}}}