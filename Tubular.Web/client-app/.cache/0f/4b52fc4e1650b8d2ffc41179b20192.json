{"id":"../node_modules/tubular-react/dist/Toolbar/GridToolbar.js","dependencies":[{"name":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\tubular-react\\dist\\Toolbar\\GridToolbar.js.map","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\tubular-react\\src\\Toolbar\\GridToolbar.tsx","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\package.json","includedInParent":true,"mtime":1567469419529},{"name":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\tubular-react\\package.json","includedInParent":true,"mtime":1567480634804},{"name":"@material-ui/core/Toolbar","loc":{"line":3,"column":24},"parent":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\tubular-react\\dist\\Toolbar\\GridToolbar.js","resolved":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\@material-ui\\core\\esm\\Toolbar\\index.js"},{"name":"react","loc":{"line":4,"column":20},"parent":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\tubular-react\\dist\\Toolbar\\GridToolbar.js","resolved":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\react\\index.js"},{"name":"uno-react","loc":{"line":5,"column":26},"parent":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\tubular-react\\dist\\Toolbar\\GridToolbar.js","resolved":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\uno-react\\lib\\index.js"},{"name":"../Filtering/SearchTextInput","loc":{"line":6,"column":32},"parent":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\tubular-react\\dist\\Toolbar\\GridToolbar.js","resolved":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\tubular-react\\dist\\Filtering\\SearchTextInput.js"},{"name":"./ExportButton","loc":{"line":7,"column":29},"parent":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\tubular-react\\dist\\Toolbar\\GridToolbar.js","resolved":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\tubular-react\\dist\\Toolbar\\ExportButton.js"}],"generated":{"js":"\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Toolbar_1 = require(\"@material-ui/core/Toolbar\");\r\nvar React = require(\"react\");\r\nvar uno_react_1 = require(\"uno-react\");\r\nvar SearchTextInput_1 = require(\"../Filtering/SearchTextInput\");\r\nvar ExportButton_1 = require(\"./ExportButton\");\r\nvar styles = {\r\n    mobileSpacer: {\r\n        flexShrink: '1',\r\n    },\r\n    spacer: {\r\n        flex: '1 1 45%',\r\n    },\r\n};\r\nvar outerWidth = 800;\r\nvar timeout = 400;\r\nexports.GridToolbar = function (_a) {\r\n    var toolbarOptions = _a.toolbarOptions, gridName = _a.gridName, grid = _a.grid;\r\n    var isMobileResolution = uno_react_1.useResolutionSwitch(outerWidth, timeout)[0];\r\n    return (React.createElement(Toolbar_1.default, { \"data-testid\": 'grid-toolbar' },\r\n        React.createElement(\"div\", { style: isMobileResolution ? styles.mobileSpacer : styles.spacer }),\r\n        toolbarOptions.customItems && toolbarOptions.customItems,\r\n        toolbarOptions.exportButton &&\r\n            React.createElement(ExportButton_1.ExportButton, { type: 'csv', gridName: gridName, exportTo: grid.api.exportTo, filteredRecordCount: grid.state.filteredRecordCount, \"data-testid\": 'export-button-csv' }),\r\n        toolbarOptions.printButton &&\r\n            React.createElement(ExportButton_1.ExportButton, { type: 'print', gridName: gridName, exportTo: grid.api.exportTo, filteredRecordCount: grid.state.filteredRecordCount, \"data-testid\": 'export-button-print' }),\r\n        toolbarOptions.searchText &&\r\n            React.createElement(SearchTextInput_1.SearchTextInput, { searchText: grid.state.searchText, updateSearchText: grid.api.updateSearchText, \"data-testid\": 'search-text-input' })));\r\n};\r\n"},"sourceMaps":{"js":{"version":3,"file":"GridToolbar.js","sourceRoot":"","sources":["../../src/Toolbar/GridToolbar.tsx"],"names":[],"mappings":";;AAAA,qDAAgD;AAChD,6BAA+B;AAC/B,uCAAgD;AAEhD,gEAA+D;AAC/D,+CAA8C;AAG9C,IAAM,MAAM,GAAQ;IAClB,YAAY,EAAE;QACZ,UAAU,EAAE,GAAG;KAChB;IACD,MAAM,EAAE;QACN,IAAI,EAAE,SAAS;KAChB;CACF,CAAC;AAEF,IAAM,UAAU,GAAG,GAAG,CAAC;AACvB,IAAM,OAAO,GAAG,GAAG,CAAC;AAQP,QAAA,WAAW,GAAoC,UAAC,EAAkC;QAAhC,kCAAc,EAAE,sBAAQ,EAAE,cAAI;IACpF,IAAA,4EAAkB,CAA6C;IAEtE,OAAO,CACL,oBAAC,iBAAO,mBAAa,cAAc;QACjC,6BAAK,KAAK,EAAE,kBAAkB,CAAC,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,GAAI;QACvE,cAAc,CAAC,WAAW,IAAI,cAAc,CAAC,WAAW;QACxD,cAAc,CAAC,YAAY;YAC1B,oBAAC,2BAAY,IACX,IAAI,EAAC,KAAK,EACV,QAAQ,EAAE,QAAQ,EAClB,QAAQ,EAAE,IAAI,CAAC,GAAG,CAAC,QAAQ,EAC3B,mBAAmB,EAAE,IAAI,CAAC,KAAK,CAAC,mBAAmB,iBACvC,mBAAmB,GAC/B;QACH,cAAc,CAAC,WAAW;YACzB,oBAAC,2BAAY,IACX,IAAI,EAAC,OAAO,EACZ,QAAQ,EAAE,QAAQ,EAClB,QAAQ,EAAE,IAAI,CAAC,GAAG,CAAC,QAAQ,EAC3B,mBAAmB,EAAE,IAAI,CAAC,KAAK,CAAC,mBAAmB,iBACvC,qBAAqB,GACjC;QACH,cAAc,CAAC,UAAU;YACxB,oBAAC,iCAAe,IACd,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,UAAU,EACjC,gBAAgB,EAAE,IAAI,CAAC,GAAG,CAAC,gBAAgB,iBAC/B,mBAAmB,GAC/B,CACI,CACX,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import Toolbar from '@material-ui/core/Toolbar';\r\nimport * as React from 'react';\r\nimport { useResolutionSwitch } from 'uno-react';\r\nimport { IDataGrid } from '../DataGridInterfaces/IDataGrid';\r\nimport { SearchTextInput } from '../Filtering/SearchTextInput';\r\nimport { ExportButton } from './ExportButton';\r\nimport { ToolbarOptions } from './ToolbarOptions';\r\n\r\nconst styles: any = {\r\n  mobileSpacer: {\r\n    flexShrink: '1',\r\n  },\r\n  spacer: {\r\n    flex: '1 1 45%',\r\n  },\r\n};\r\n\r\nconst outerWidth = 800;\r\nconst timeout = 400;\r\n\r\ninterface IProps {\r\n  toolbarOptions: ToolbarOptions;\r\n  gridName: string;\r\n  grid: IDataGrid;\r\n}\r\n\r\nexport const GridToolbar: React.FunctionComponent<IProps> = ({ toolbarOptions, gridName, grid }) => {\r\n  const [isMobileResolution] = useResolutionSwitch(outerWidth, timeout);\r\n\r\n  return (\r\n    <Toolbar data-testid='grid-toolbar'>\r\n      <div style={isMobileResolution ? styles.mobileSpacer : styles.spacer} />\r\n      {toolbarOptions.customItems && toolbarOptions.customItems}\r\n      {toolbarOptions.exportButton &&\r\n        <ExportButton\r\n          type='csv'\r\n          gridName={gridName}\r\n          exportTo={grid.api.exportTo}\r\n          filteredRecordCount={grid.state.filteredRecordCount}\r\n          data-testid='export-button-csv'\r\n        />}\r\n      {toolbarOptions.printButton &&\r\n        <ExportButton\r\n          type='print'\r\n          gridName={gridName}\r\n          exportTo={grid.api.exportTo}\r\n          filteredRecordCount={grid.state.filteredRecordCount}\r\n          data-testid='export-button-print'\r\n        />}\r\n      {toolbarOptions.searchText &&\r\n        <SearchTextInput\r\n          searchText={grid.state.searchText}\r\n          updateSearchText={grid.api.updateSearchText}\r\n          data-testid='search-text-input'\r\n        />}\r\n    </Toolbar>\r\n  );\r\n};\r\n"]}},"error":null,"hash":"11888bebc334f9d615e867329b116195","cacheData":{"env":{}}}