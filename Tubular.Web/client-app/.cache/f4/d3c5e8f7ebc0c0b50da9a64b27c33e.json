{"id":"../node_modules/tubular-react/dist/Filtering/DialogInput.js","dependencies":[{"name":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\tubular-react\\dist\\Filtering\\DialogInput.js.map","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\tubular-react\\src\\Filtering\\DialogInput.tsx","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\package.json","includedInParent":true,"mtime":1567469419529},{"name":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\tubular-react\\package.json","includedInParent":true,"mtime":1567480634804},{"name":"@material-ui/core/MenuItem","loc":{"line":3,"column":25},"parent":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\tubular-react\\dist\\Filtering\\DialogInput.js","resolved":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\@material-ui\\core\\esm\\MenuItem\\index.js"},{"name":"@material-ui/core/TextField","loc":{"line":4,"column":26},"parent":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\tubular-react\\dist\\Filtering\\DialogInput.js","resolved":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\@material-ui\\core\\esm\\TextField\\index.js"},{"name":"react","loc":{"line":5,"column":20},"parent":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\tubular-react\\dist\\Filtering\\DialogInput.js","resolved":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\react\\index.js"},{"name":"tubular-common","loc":{"line":6,"column":31},"parent":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\tubular-react\\dist\\Filtering\\DialogInput.js","resolved":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\tubular-common\\dist\\index.js"},{"name":"date-fns/format","loc":{"line":8,"column":21},"parent":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\tubular-react\\dist\\Filtering\\DialogInput.js","resolved":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\date-fns\\format\\index.js"}],"generated":{"js":"\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar MenuItem_1 = require(\"@material-ui/core/MenuItem\");\r\nvar TextField_1 = require(\"@material-ui/core/TextField\");\r\nvar React = require(\"react\");\r\nvar tubular_common_1 = require(\"tubular-common\");\r\n// tslint:disable-next-line: no-var-requires\r\nvar format = require('date-fns/format');\r\nvar dropdown = {\r\n    marginLeft: '10%',\r\n    marginTop: '5%',\r\n    width: '80%',\r\n};\r\nvar BooleanInputOperators = [\r\n    { Value: 'true', Title: 'True' },\r\n    { Value: 'false', Title: 'False' },\r\n];\r\nvar ColumnDataTypeToHtmlType = {\r\n    boolean: 'text',\r\n    date: 'date',\r\n    datetime: 'datetime-local',\r\n    datetimeutc: 'datetime-local',\r\n    numeric: 'number',\r\n    string: 'text',\r\n};\r\nvar getValue = function (dataType, operator, value, handleTextFieldChange) {\r\n    switch (dataType) {\r\n        case tubular_common_1.ColumnDataType.DATE:\r\n            if (value) {\r\n                return format(value, 'YYYY-MM-DD');\r\n            }\r\n            handleTextFieldChange(format(new Date(), 'YYYY-MM-DD'));\r\n            return '';\r\n        case tubular_common_1.ColumnDataType.DATE_TIME:\r\n        case tubular_common_1.ColumnDataType.DATE_TIME_UTC:\r\n            if (value) {\r\n                return format(value, 'YYYY-MM-DD[T]HH:mm');\r\n            }\r\n            handleTextFieldChange(format(new Date(), 'YYYY-MM-DD[T]HH:mm'));\r\n            return '';\r\n        case tubular_common_1.ColumnDataType.BOOLEAN:\r\n            return operator === tubular_common_1.CompareOperators.NONE\r\n                ? ''\r\n                : typeof value === 'boolean'\r\n                    ? value === true\r\n                        ? 'true'\r\n                        : 'false'\r\n                    : value;\r\n        default:\r\n            return operator === tubular_common_1.CompareOperators.NONE ? '' : value || '';\r\n    }\r\n};\r\nexports.DialogInput = function (_a) {\r\n    var column = _a.column, handleTextFieldChange = _a.handleTextFieldChange, isPrimary = _a.isPrimary;\r\n    var value = getValue(column.DataType, column.Filter.Operator, isPrimary ? column.Filter.Text : column.Filter.Argument[0], handleTextFieldChange) || '';\r\n    var disabled = isPrimary\r\n        ? column.Filter.Operator === tubular_common_1.CompareOperators.NONE\r\n        : false;\r\n    var label = isPrimary\r\n        ? column.Filter.Operator !== tubular_common_1.CompareOperators.BETWEEN\r\n            ? 'Value'\r\n            : 'First Value'\r\n        : 'Second Value';\r\n    var handleChange = function (e) { return handleTextFieldChange(e.target.value); };\r\n    return (React.createElement(TextField_1.default, { select: column.DataType === tubular_common_1.ColumnDataType.BOOLEAN, style: dropdown, id: column.Name, disabled: disabled, value: value, label: label, type: ColumnDataTypeToHtmlType[column.DataType], onChange: handleChange }, column.DataType === tubular_common_1.ColumnDataType.BOOLEAN &&\r\n        BooleanInputOperators.map(function (option) { return (React.createElement(MenuItem_1.default, { key: option.Value, value: option.Value }, option.Title)); })));\r\n};\r\n"},"sourceMaps":{"js":{"version":3,"file":"DialogInput.js","sourceRoot":"","sources":["../../src/Filtering/DialogInput.tsx"],"names":[],"mappings":"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","sourcesContent":["import MenuItem from '@material-ui/core/MenuItem';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport * as React from 'react';\r\n\r\nimport { ColumnDataType, ColumnModel, CompareOperators } from 'tubular-common';\r\n\r\n// tslint:disable-next-line: no-var-requires\r\nconst format = require('date-fns/format');\r\nconst dropdown = {\r\n  marginLeft: '10%',\r\n  marginTop: '5%',\r\n  width: '80%',\r\n};\r\n\r\nconst BooleanInputOperators = [\r\n  { Value: 'true', Title: 'True' },\r\n  { Value: 'false', Title: 'False' },\r\n];\r\n\r\ninterface IProps {\r\n  isPrimary: boolean;\r\n  column: ColumnModel;\r\n  handleTextFieldChange(value: string): void;\r\n}\r\n\r\nconst ColumnDataTypeToHtmlType = {\r\n  boolean: 'text',\r\n  date: 'date',\r\n  datetime: 'datetime-local',\r\n  datetimeutc: 'datetime-local',\r\n  numeric: 'number',\r\n  string: 'text',\r\n};\r\n\r\nconst getValue = (\r\n  dataType: ColumnDataType,\r\n  operator: CompareOperators,\r\n  value: string,\r\n  handleTextFieldChange: any,\r\n) => {\r\n  switch (dataType) {\r\n    case ColumnDataType.DATE:\r\n      if (value) {\r\n        return format(value, 'YYYY-MM-DD');\r\n      }\r\n      handleTextFieldChange(format(new Date(), 'YYYY-MM-DD'));\r\n      return '';\r\n    case ColumnDataType.DATE_TIME:\r\n    case ColumnDataType.DATE_TIME_UTC:\r\n      if (value) {\r\n        return format(value, 'YYYY-MM-DD[T]HH:mm');\r\n      }\r\n      handleTextFieldChange(format(new Date(), 'YYYY-MM-DD[T]HH:mm'));\r\n      return '';\r\n    case ColumnDataType.BOOLEAN:\r\n      return operator === CompareOperators.NONE\r\n        ? ''\r\n        : typeof value === 'boolean'\r\n          ? value === true\r\n            ? 'true'\r\n            : 'false'\r\n          : value;\r\n    default:\r\n      return operator === CompareOperators.NONE ? '' : value || '';\r\n  }\r\n};\r\n\r\nexport const DialogInput: React.FunctionComponent<IProps> = ({\r\n  column,\r\n  handleTextFieldChange,\r\n  isPrimary,\r\n}) => {\r\n  const value =\r\n    getValue(\r\n      column.DataType,\r\n      column.Filter.Operator,\r\n      isPrimary ? column.Filter.Text : column.Filter.Argument[0],\r\n      handleTextFieldChange,\r\n    ) || '';\r\n  const disabled = isPrimary\r\n    ? column.Filter.Operator === CompareOperators.NONE\r\n    : false;\r\n  const label = isPrimary\r\n    ? column.Filter.Operator !== CompareOperators.BETWEEN\r\n      ? 'Value'\r\n      : 'First Value'\r\n    : 'Second Value';\r\n\r\n  const handleChange = (e: any) => handleTextFieldChange(e.target.value);\r\n\r\n  return (\r\n    <TextField\r\n      select={column.DataType === ColumnDataType.BOOLEAN}\r\n      style={dropdown}\r\n      id={column.Name}\r\n      disabled={disabled}\r\n      value={value}\r\n      label={label}\r\n      type={(ColumnDataTypeToHtmlType as any)[column.DataType]}\r\n      onChange={handleChange}\r\n    >\r\n      {column.DataType === ColumnDataType.BOOLEAN &&\r\n        BooleanInputOperators.map((option) => (\r\n          <MenuItem key={option.Value} value={option.Value}>\r\n            {option.Title}\r\n          </MenuItem>\r\n        ))}\r\n    </TextField>\r\n  );\r\n};\r\n"]}},"error":null,"hash":"0a67c77c702ceb69194bea6c50c6dbc5","cacheData":{"env":{}}}