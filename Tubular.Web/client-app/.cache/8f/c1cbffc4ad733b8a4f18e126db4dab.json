{"id":"../node_modules/tubular-react/dist/DataGrid/GridHeader.js","dependencies":[{"name":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\tubular-react\\dist\\DataGrid\\GridHeader.js.map","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\tubular-react\\src\\DataGrid\\GridHeader.tsx","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\package.json","includedInParent":true,"mtime":1567469419529},{"name":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\tubular-react\\package.json","includedInParent":true,"mtime":1567480634804},{"name":"@material-ui/core/IconButton","loc":{"line":3,"column":27},"parent":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\tubular-react\\dist\\DataGrid\\GridHeader.js","resolved":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\@material-ui\\core\\esm\\IconButton\\index.js"},{"name":"@material-ui/core/TableCell","loc":{"line":4,"column":26},"parent":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\tubular-react\\dist\\DataGrid\\GridHeader.js","resolved":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\@material-ui\\core\\esm\\TableCell\\index.js"},{"name":"@material-ui/core/TableRow","loc":{"line":5,"column":25},"parent":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\tubular-react\\dist\\DataGrid\\GridHeader.js","resolved":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\@material-ui\\core\\esm\\TableRow\\index.js"},{"name":"@material-ui/core/TableSortLabel","loc":{"line":6,"column":31},"parent":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\tubular-react\\dist\\DataGrid\\GridHeader.js","resolved":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\@material-ui\\core\\esm\\TableSortLabel\\index.js"},{"name":"@material-ui/core/Tooltip","loc":{"line":7,"column":24},"parent":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\tubular-react\\dist\\DataGrid\\GridHeader.js","resolved":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\@material-ui\\core\\esm\\Tooltip\\index.js"},{"name":"@material-ui/icons/FilterList","loc":{"line":8,"column":27},"parent":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\tubular-react\\dist\\DataGrid\\GridHeader.js","resolved":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\@material-ui\\icons\\FilterList.js"},{"name":"react","loc":{"line":9,"column":20},"parent":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\tubular-react\\dist\\DataGrid\\GridHeader.js","resolved":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\react\\index.js"},{"name":"tubular-common","loc":{"line":10,"column":31},"parent":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\tubular-react\\dist\\DataGrid\\GridHeader.js","resolved":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\tubular-common\\dist\\index.js"},{"name":"../Filtering/DialogModal","loc":{"line":11,"column":28},"parent":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\tubular-react\\dist\\DataGrid\\GridHeader.js","resolved":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\tubular-react\\dist\\Filtering\\DialogModal.js"}],"generated":{"js":"\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar IconButton_1 = require(\"@material-ui/core/IconButton\");\r\nvar TableCell_1 = require(\"@material-ui/core/TableCell\");\r\nvar TableRow_1 = require(\"@material-ui/core/TableRow\");\r\nvar TableSortLabel_1 = require(\"@material-ui/core/TableSortLabel\");\r\nvar Tooltip_1 = require(\"@material-ui/core/Tooltip\");\r\nvar FilterList_1 = require(\"@material-ui/icons/FilterList\");\r\nvar React = require(\"react\");\r\nvar tubular_common_1 = require(\"tubular-common\");\r\nvar DialogModal_1 = require(\"../Filtering/DialogModal\");\r\nexports.GridHeaderCell = function (_a) {\r\n    var column = _a.column, sortColumn = _a.sortColumn, setActiveColumn = _a.setActiveColumn;\r\n    var sort = function () { return sortColumn(column.Name); };\r\n    var handleClick = function (e) { return setActiveColumn(column, e); };\r\n    var direction = column.SortDirection === tubular_common_1.ColumnSortDirection.ASCENDING ||\r\n        column.SortDirection === tubular_common_1.ColumnSortDirection.NONE ? 'asc' : 'desc';\r\n    var render = column.Sortable ? (React.createElement(Tooltip_1.default, { title: 'Click to sort. Press Ctrl to sort by multiple columns', placement: 'bottom-start', enterDelay: 300 },\r\n        React.createElement(TableSortLabel_1.default, { onClick: sort, direction: direction, active: column.SortDirection !== tubular_common_1.ColumnSortDirection.NONE }, column.Label))) : (column.Label);\r\n    var filter = column.Filterable && (React.createElement(IconButton_1.default, { id: column.Name, onClick: handleClick },\r\n        React.createElement(FilterList_1.default, { color: column.Filter.HasFilter &&\r\n                column.Filter.Operator !== tubular_common_1.CompareOperators.NONE\r\n                ? 'action'\r\n                : 'disabled' })));\r\n    return (React.createElement(TableCell_1.default, { key: column.Label, padding: column.Label === '' ? 'none' : 'default' },\r\n        render,\r\n        filter));\r\n};\r\nexports.GridHeader = function (_a) {\r\n    var grid = _a.grid;\r\n    var _b = React.useState(null), anchorFilter = _b[0], setAnchorFilter = _b[1];\r\n    var setActiveColumn = function (column, event) {\r\n        grid.api.setActiveColumn(column);\r\n        setAnchorFilter(event.currentTarget);\r\n    };\r\n    var setFilter = function (filter) {\r\n        grid.api.setFilter(filter);\r\n        setAnchorFilter(null);\r\n    };\r\n    return (React.createElement(TableRow_1.default, null,\r\n        grid.state.activeColumn &&\r\n            React.createElement(DialogModal_1.DialogModal, { activeColumn: grid.state.activeColumn, anchorFilter: anchorFilter, setAnchorFilter: setAnchorFilter, setFilter: setFilter, handleFilterChange: grid.api.handleFilterChange }),\r\n        grid.state.columns\r\n            .filter(function (col) { return col.Visible; })\r\n            .map(function (column) {\r\n            return React.createElement(exports.GridHeaderCell, { key: column.Name, column: column, sortColumn: grid.api.sortColumn, setActiveColumn: setActiveColumn });\r\n        })));\r\n};\r\n"},"sourceMaps":{"js":{"version":3,"file":"GridHeader.js","sourceRoot":"","sources":["../../src/DataGrid/GridHeader.tsx"],"names":[],"mappings":"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","sourcesContent":["import IconButton from '@material-ui/core/IconButton';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport * as React from 'react';\r\nimport { ColumnModel, ColumnSortDirection, CompareOperators } from 'tubular-common';\r\nimport { IDataGrid } from '../DataGridInterfaces/IDataGrid';\r\nimport { IFilterWrapper } from '../DataGridInterfaces/IFilterWrapper';\r\nimport { DialogModal } from '../Filtering/DialogModal';\r\n\r\ninterface IGridHeaderCellProps {\r\n  column: ColumnModel;\r\n  key: string;\r\n  setActiveColumn: (column: ColumnModel, event: React.MouseEvent<HTMLElement>) => void;\r\n  sortColumn: (property: string) => void;\r\n}\r\n\r\nexport const GridHeaderCell: React.FunctionComponent<IGridHeaderCellProps> =\r\n  ({ column, sortColumn, setActiveColumn }) => {\r\n    const sort = () => sortColumn(column.Name);\r\n    const handleClick = (e: any) => setActiveColumn(column, e);\r\n\r\n    const direction = column.SortDirection === ColumnSortDirection.ASCENDING ||\r\n      column.SortDirection === ColumnSortDirection.NONE ? 'asc' : 'desc';\r\n\r\n    const render = column.Sortable ? (\r\n      <Tooltip\r\n        title='Click to sort. Press Ctrl to sort by multiple columns'\r\n        placement='bottom-start'\r\n        enterDelay={300}\r\n      >\r\n        <TableSortLabel\r\n          onClick={sort}\r\n          direction={direction}\r\n          active={column.SortDirection !== ColumnSortDirection.NONE}\r\n        >\r\n          {column.Label}\r\n        </TableSortLabel>\r\n      </Tooltip>\r\n    ) : (\r\n        column.Label\r\n      );\r\n\r\n    const filter = column.Filterable && (\r\n      <IconButton\r\n        id={column.Name}\r\n        onClick={handleClick}\r\n      >\r\n        <FilterList\r\n          color={\r\n            column.Filter.HasFilter &&\r\n              column.Filter.Operator !== CompareOperators.NONE\r\n              ? 'action'\r\n              : 'disabled'\r\n          }\r\n        />\r\n      </IconButton>\r\n    );\r\n\r\n    return (\r\n      <TableCell\r\n        key={column.Label}\r\n        padding={column.Label === '' ? 'none' : 'default'}\r\n      >\r\n        {render}\r\n        {filter}\r\n      </TableCell>\r\n    );\r\n  };\r\n\r\ninterface IProps {\r\n  grid: IDataGrid;\r\n}\r\n\r\nexport const GridHeader: React.FunctionComponent<IProps> = ({ grid }) => {\r\n  const [anchorFilter, setAnchorFilter] = React.useState(null);\r\n\r\n  const setActiveColumn = (column: ColumnModel, event: React.MouseEvent<HTMLElement>) => {\r\n    grid.api.setActiveColumn(column);\r\n    setAnchorFilter(event.currentTarget);\r\n  };\r\n\r\n  const setFilter = (filter: IFilterWrapper) => {\r\n    grid.api.setFilter(filter);\r\n    setAnchorFilter(null);\r\n  };\r\n\r\n  return (\r\n    <TableRow>\r\n      {grid.state.activeColumn &&\r\n        <DialogModal\r\n          activeColumn={grid.state.activeColumn}\r\n          anchorFilter={anchorFilter}\r\n          setAnchorFilter={setAnchorFilter}\r\n          setFilter={setFilter}\r\n          handleFilterChange={grid.api.handleFilterChange}\r\n        />}\r\n      {grid.state.columns\r\n        .filter((col: ColumnModel) => col.Visible)\r\n        .map((column: ColumnModel) =>\r\n          <GridHeaderCell\r\n            key={column.Name}\r\n            column={column}\r\n            sortColumn={grid.api.sortColumn}\r\n            setActiveColumn={setActiveColumn}\r\n          />,\r\n        )}\r\n    </TableRow>\r\n  );\r\n};\r\n"]}},"error":null,"hash":"e326cd40b498a5b1f71843487243e846","cacheData":{"env":{}}}