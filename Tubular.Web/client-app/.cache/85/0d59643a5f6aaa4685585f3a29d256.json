{"id":"../node_modules/uno-react/lib/functions/validations.js","dependencies":[{"name":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\uno-react\\lib\\functions\\validations.js.map","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\package.json","includedInParent":true,"mtime":1567469419529},{"name":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\uno-react\\package.json","includedInParent":true,"mtime":1567480635401},{"name":"date-fns/differenceInMinutes","loc":{"line":6,"column":54},"parent":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\uno-react\\lib\\functions\\validations.js","resolved":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\uno-react\\node_modules\\date-fns\\esm\\differenceInMinutes\\index.js"},{"name":"date-fns/parseISO","loc":{"line":7,"column":43},"parent":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\uno-react\\lib\\functions\\validations.js","resolved":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\uno-react\\node_modules\\date-fns\\esm\\parseISO\\index.js"},{"name":"react-form-validator-core","loc":{"line":8,"column":44},"parent":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\uno-react\\lib\\functions\\validations.js","resolved":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\react-form-validator-core\\lib\\index.js"}],"generated":{"js":"\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst differenceInMinutes_1 = __importDefault(require(\"date-fns/differenceInMinutes\"));\r\nconst parseISO_1 = __importDefault(require(\"date-fns/parseISO\"));\r\nconst react_form_validator_core_1 = require(\"react-form-validator-core\");\r\nexports.ValidatorForm = react_form_validator_core_1.ValidatorForm;\r\nconst lettersRegex = new RegExp('^(?=.*[a-z])(?=.*[A-Z])');\r\nconst numberRegex = new RegExp('^(?=.*[0-9])');\r\nconst nonAlphanumericRegex = new RegExp('^(?=.*[^\\da-zA-Z0-9])');\r\nconst imageRegex = new RegExp('\\.(jpe?g|png)');\r\nconst pincodeRegex = /\\d+/g;\r\nconst passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[$@$!_%*.?&])([A-Za-z\\d$@$!%*?&]|[^ ]){8,}$/;\r\nfunction isNotAllBlanks(value, minlength) {\r\n    const cleanVal = value.replace(/\\s/g, '');\r\n    return cleanVal.length >= minlength;\r\n}\r\nexports.isNotAllBlanks = isNotAllBlanks;\r\nfunction maxNaturalNumber(value, maxInt) {\r\n    const valueReal = +Number(value);\r\n    const maxInteger = +Number(maxInt);\r\n    return valueReal >= 0 && valueReal <= maxInteger;\r\n}\r\nexports.maxNaturalNumber = maxNaturalNumber;\r\nreact_form_validator_core_1.ValidatorForm.addValidationRule('isNotAllBlanks', isNotAllBlanks);\r\nreact_form_validator_core_1.ValidatorForm.addValidationRule('maxNaturalNumber', maxNaturalNumber);\r\nfunction validateEndDate(endValue, startValue) {\r\n    const startDate = parseISO_1.default(startValue);\r\n    const endDate = parseISO_1.default(endValue);\r\n    return (differenceInMinutes_1.default(endDate, startDate) > 0);\r\n}\r\nexports.validateEndDate = validateEndDate;\r\nreact_form_validator_core_1.ValidatorForm.addValidationRule('validateEndDate', validateEndDate);\r\nfunction startDateGreaterThanEndDate(startValue, endValue) {\r\n    return endValue !== null ? validateEndDate(endValue, startValue) : true;\r\n}\r\nexports.startDateGreaterThanEndDate = startDateGreaterThanEndDate;\r\nreact_form_validator_core_1.ValidatorForm.addValidationRule('startDateGreaterThanEndDate', startDateGreaterThanEndDate);\r\nreact_form_validator_core_1.ValidatorForm.addValidationRule('isImage', (value, extensionFile) => (imageRegex.test(extensionFile.toLowerCase())));\r\nreact_form_validator_core_1.ValidatorForm.addValidationRule('atLeastOneLowerAndUpperCase', (value) => lettersRegex.test(value));\r\nreact_form_validator_core_1.ValidatorForm.addValidationRule('atLeastOneNumber', (value) => numberRegex.test(value));\r\nreact_form_validator_core_1.ValidatorForm.addValidationRule('atLeastOneSpecialCharacter', (value) => nonAlphanumericRegex.test(value));\r\nreact_form_validator_core_1.ValidatorForm.addValidationRule('isPasswordMatch', (value, comparedValue) => value === comparedValue);\r\nreact_form_validator_core_1.ValidatorForm.addValidationRule('pincodeValidator', (value) => {\r\n    if (!value || value.trim().length === 0) {\r\n        return true;\r\n    }\r\n    const res = value.match(pincodeRegex);\r\n    return res && res[0].length === 6;\r\n});\r\nreact_form_validator_core_1.ValidatorForm.addValidationRule('password', (value) => value.match(passwordRegex));\r\n"},"sourceMaps":{"js":{"version":3,"file":"validations.js","sourceRoot":"","sources":["../../src/functions/validations.ts"],"names":[],"mappings":"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","sourcesContent":[null]}},"error":null,"hash":"92d158c8495a23092a9f48d9bb4e8539","cacheData":{"env":{}}}