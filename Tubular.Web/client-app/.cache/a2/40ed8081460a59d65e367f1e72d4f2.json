{"id":"../node_modules/tubular-react/dist/utils/renders.js","dependencies":[{"name":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\tubular-react\\dist\\utils\\renders.js.map","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\tubular-react\\src\\utils\\renders.tsx","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\package.json","includedInParent":true,"mtime":1567469419529},{"name":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\tubular-react\\package.json","includedInParent":true,"mtime":1567480634804},{"name":"@material-ui/core/TableCell","loc":{"line":3,"column":26},"parent":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\tubular-react\\dist\\utils\\renders.js","resolved":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\@material-ui\\core\\esm\\TableCell\\index.js"},{"name":"@material-ui/icons/CheckBox","loc":{"line":4,"column":25},"parent":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\tubular-react\\dist\\utils\\renders.js","resolved":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\@material-ui\\icons\\CheckBox.js"},{"name":"@material-ui/icons/CheckBoxOutlineBlank","loc":{"line":5,"column":37},"parent":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\tubular-react\\dist\\utils\\renders.js","resolved":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\@material-ui\\icons\\CheckBoxOutlineBlank.js"},{"name":"react","loc":{"line":6,"column":20},"parent":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\tubular-react\\dist\\utils\\renders.js","resolved":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\react\\index.js"},{"name":"tubular-common","loc":{"line":7,"column":31},"parent":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\tubular-react\\dist\\utils\\renders.js","resolved":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\tubular-common\\dist\\index.js"},{"name":"date-fns/format","loc":{"line":9,"column":21},"parent":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\tubular-react\\dist\\utils\\renders.js","resolved":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\date-fns\\format\\index.js"},{"name":"date-fns/get_year","loc":{"line":11,"column":22},"parent":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\tubular-react\\dist\\utils\\renders.js","resolved":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\date-fns\\get_year\\index.js"},{"name":"date-fns/parse","loc":{"line":13,"column":20},"parent":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\tubular-react\\dist\\utils\\renders.js","resolved":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\date-fns\\parse\\index.js"}],"generated":{"js":"\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar TableCell_1 = require(\"@material-ui/core/TableCell\");\r\nvar CheckBox_1 = require(\"@material-ui/icons/CheckBox\");\r\nvar CheckBoxOutlineBlank_1 = require(\"@material-ui/icons/CheckBoxOutlineBlank\");\r\nvar React = require(\"react\");\r\nvar tubular_common_1 = require(\"tubular-common\");\r\n// tslint:disable-next-line: no-var-requires\r\nvar format = require('date-fns/format');\r\n// tslint:disable-next-line: no-var-requires\r\nvar getYear = require('date-fns/get_year');\r\n// tslint:disable-next-line: no-var-requires\r\nvar parse = require('date-fns/parse');\r\nexports.renderCellContent = function (column, row) {\r\n    switch (column.DataType) {\r\n        case tubular_common_1.ColumnDataType.NUMERIC:\r\n            return row[column.Name] || 0;\r\n        case tubular_common_1.ColumnDataType.DATE:\r\n            if (!row[column.Name]) {\r\n                return '';\r\n            }\r\n            return getYear(parse(row[column.Name])) > 0 ? format(row[column.Name], 'M/D/YYYY') : '';\r\n        case tubular_common_1.ColumnDataType.DATE_TIME:\r\n        case tubular_common_1.ColumnDataType.DATE_TIME_UTC:\r\n            if (!row[column.Name]) {\r\n                return '';\r\n            }\r\n            return getYear(parse(row[column.Name])) > 0 ? format(row[column.Name], 'M/D/YYYY h:mm A') : '';\r\n        case tubular_common_1.ColumnDataType.BOOLEAN:\r\n            return row[column.Name] === true ? React.createElement(CheckBox_1.default, null) : React.createElement(CheckBoxOutlineBlank_1.default, null);\r\n        default:\r\n            return row[column.Name];\r\n    }\r\n};\r\nexports.renderCellAlign = function (column) {\r\n    switch (column.DataType) {\r\n        case tubular_common_1.ColumnDataType.NUMERIC:\r\n            return 'right';\r\n        case tubular_common_1.ColumnDataType.BOOLEAN:\r\n            return 'center';\r\n        default:\r\n            return 'inherit';\r\n    }\r\n};\r\nexports.renderCells = function (columns, row) {\r\n    return columns\r\n        .filter(function (col) { return col.Visible; })\r\n        .map(function (column) {\r\n        return (React.createElement(TableCell_1.default, { key: column.Name, padding: column.Label === '' ? 'none' : 'default', align: exports.renderCellAlign(column) }, exports.renderCellContent(column, row)));\r\n    });\r\n};\r\n"},"sourceMaps":{"js":{"version":3,"file":"renders.js","sourceRoot":"","sources":["../../src/utils/renders.tsx"],"names":[],"mappings":";;AAAA,yDAAoD;AACpD,wDAAmD;AACnD,gFAA2E;AAC3E,6BAA+B;AAC/B,iDAA6D;AAE7D,4CAA4C;AAC5C,IAAM,MAAM,GAAG,OAAO,CAAC,iBAAiB,CAAC,CAAC;AAC1C,4CAA4C;AAC5C,IAAM,OAAO,GAAG,OAAO,CAAC,mBAAmB,CAAC,CAAC;AAC7C,4CAA4C;AAC5C,IAAM,KAAK,GAAG,OAAO,CAAC,gBAAgB,CAAC,CAAC;AAE3B,QAAA,iBAAiB,GAAQ,UAAC,MAAmB,EAAE,GAAQ;IAChE,QAAQ,MAAM,CAAC,QAAQ,EAAE;QACrB,KAAK,+BAAc,CAAC,OAAO;YACvB,OAAO,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACjC,KAAK,+BAAc,CAAC,IAAI;YACpB,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;gBACnB,OAAO,EAAE,CAAC;aACb;YACD,OAAO,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QAC5F,KAAK,+BAAc,CAAC,SAAS,CAAC;QAC9B,KAAK,+BAAc,CAAC,aAAa;YAC7B,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;gBACnB,OAAO,EAAE,CAAC;aACb;YACD,OAAO,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,iBAAiB,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QACnG,KAAK,+BAAc,CAAC,OAAO;YACvB,OAAO,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,oBAAC,kBAAQ,OAAG,CAAC,CAAC,CAAC,oBAAC,8BAAoB,OAAG,CAAC;QAC/E;YACI,OAAO,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;KAC/B;AACL,CAAC,CAAC;AAEW,QAAA,eAAe,GAAQ,UAAC,MAAmB;IACpD,QAAQ,MAAM,CAAC,QAAQ,EAAE;QACrB,KAAK,+BAAc,CAAC,OAAO;YACvB,OAAO,OAAO,CAAC;QACnB,KAAK,+BAAc,CAAC,OAAO;YACvB,OAAO,QAAQ,CAAC;QACpB;YACI,OAAO,SAAS,CAAC;KACxB;AACL,CAAC,CAAC;AAEW,QAAA,WAAW,GAAQ,UAAC,OAAsB,EAAE,GAAQ;IAC7D,OAAA,OAAO;SACF,MAAM,CAAC,UAAC,GAAgB,IAAK,OAAA,GAAG,CAAC,OAAO,EAAX,CAAW,CAAC;SACzC,GAAG,CAAC,UAAC,MAAmB;QACrB,OAAA,CACI,oBAAC,mBAAS,IACN,GAAG,EAAE,MAAM,CAAC,IAAI,EAChB,OAAO,EAAE,MAAM,CAAC,KAAK,KAAK,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,SAAS,EACjD,KAAK,EAAE,uBAAe,CAAC,MAAM,CAAC,IAE7B,yBAAiB,CAAC,MAAM,EAAE,GAAG,CAAC,CACvB,CACf;IARD,CAQC,CACJ;AAZL,CAYK,CAAC","sourcesContent":["import TableCell from '@material-ui/core/TableCell';\r\nimport CheckBox from '@material-ui/icons/CheckBox';\r\nimport CheckBoxOutlineBlank from '@material-ui/icons/CheckBoxOutlineBlank';\r\nimport * as React from 'react';\r\nimport { ColumnDataType, ColumnModel } from 'tubular-common';\r\n\r\n// tslint:disable-next-line: no-var-requires\r\nconst format = require('date-fns/format');\r\n// tslint:disable-next-line: no-var-requires\r\nconst getYear = require('date-fns/get_year');\r\n// tslint:disable-next-line: no-var-requires\r\nconst parse = require('date-fns/parse');\r\n\r\nexport const renderCellContent: any = (column: ColumnModel, row: any) => {\r\n    switch (column.DataType) {\r\n        case ColumnDataType.NUMERIC:\r\n            return row[column.Name] || 0;\r\n        case ColumnDataType.DATE:\r\n            if (!row[column.Name]) {\r\n                return '';\r\n            }\r\n            return getYear(parse(row[column.Name])) > 0 ? format(row[column.Name], 'M/D/YYYY') : '';\r\n        case ColumnDataType.DATE_TIME:\r\n        case ColumnDataType.DATE_TIME_UTC:\r\n            if (!row[column.Name]) {\r\n                return '';\r\n            }\r\n            return getYear(parse(row[column.Name])) > 0 ? format(row[column.Name], 'M/D/YYYY h:mm A') : '';\r\n        case ColumnDataType.BOOLEAN:\r\n            return row[column.Name] === true ? <CheckBox /> : <CheckBoxOutlineBlank />;\r\n        default:\r\n            return row[column.Name];\r\n    }\r\n};\r\n\r\nexport const renderCellAlign: any = (column: ColumnModel) => {\r\n    switch (column.DataType) {\r\n        case ColumnDataType.NUMERIC:\r\n            return 'right';\r\n        case ColumnDataType.BOOLEAN:\r\n            return 'center';\r\n        default:\r\n            return 'inherit';\r\n    }\r\n};\r\n\r\nexport const renderCells: any = (columns: ColumnModel[], row: any) =>\r\n    columns\r\n        .filter((col: ColumnModel) => col.Visible)\r\n        .map((column: ColumnModel) =>\r\n            (\r\n                <TableCell\r\n                    key={column.Name}\r\n                    padding={column.Label === '' ? 'none' : 'default'}\r\n                    align={renderCellAlign(column)}\r\n                >\r\n                    {renderCellContent(column, row)}\r\n                </TableCell>\r\n            ),\r\n        );\r\n"]}},"error":null,"hash":"23dd34ecb84fc0321d3761ec86e91147","cacheData":{"env":{}}}