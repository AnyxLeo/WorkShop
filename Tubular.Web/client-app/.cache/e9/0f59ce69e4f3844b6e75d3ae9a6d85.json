{"id":"../node_modules/tubular-common/dist/Models/ColumnModel.js","dependencies":[{"name":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\tubular-common\\dist\\Models\\ColumnModel.js.map","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\tubular-common\\src\\Models\\ColumnModel.ts","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\package.json","includedInParent":true,"mtime":1567469419529},{"name":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\tubular-common\\package.json","includedInParent":true,"mtime":1567480635442},{"name":"./Column","loc":{"line":3,"column":23},"parent":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\tubular-common\\dist\\Models\\ColumnModel.js","resolved":"C:\\Users\\Anyx\\Documents\\Unosquare\\Tubular\\Tubular.Web\\client-app\\node_modules\\tubular-common\\dist\\Models\\Column.js"}],"generated":{"js":"\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Column_1 = require(\"./Column\");\r\nfunction filterProps(name) {\r\n    return {\r\n        Argument: [],\r\n        HasFilter: false,\r\n        Name: name,\r\n        Operator: 'None',\r\n        OptionsUrl: null,\r\n        Text: null\r\n    };\r\n}\r\nvar NumericOperators = [\r\n    { Value: Column_1.CompareOperators.NONE, Title: 'None' },\r\n    { Value: Column_1.CompareOperators.EQUALS, Title: 'Equals' },\r\n    { Value: Column_1.CompareOperators.BETWEEN, Title: 'Between' },\r\n    { Value: Column_1.CompareOperators.GTE, Title: '>=' },\r\n    { Value: Column_1.CompareOperators.GT, Title: '>' },\r\n    { Value: Column_1.CompareOperators.LTE, Title: '<=' },\r\n    { Value: Column_1.CompareOperators.LT, Title: '<' }\r\n];\r\nvar StringOperators = [\r\n    { Value: Column_1.CompareOperators.NONE, Title: 'None' },\r\n    { Value: Column_1.CompareOperators.EQUALS, Title: 'Equals' },\r\n    { Value: Column_1.CompareOperators.NOT_EQUALS, Title: 'Not Equals' },\r\n    { Value: Column_1.CompareOperators.CONTAINS, Title: 'Contains' },\r\n    { Value: Column_1.CompareOperators.NOT_CONTAINS, Title: 'Not Contains' },\r\n    { Value: Column_1.CompareOperators.STARTS_WITH, Title: 'Starts With' },\r\n    { Value: Column_1.CompareOperators.NOT_STARTS_WITH, Title: 'Not Starts With' },\r\n    { Value: Column_1.CompareOperators.ENDS_WITH, Title: 'Ends With' },\r\n    { Value: Column_1.CompareOperators.NOT_ENDS_WITH, Title: 'Not Ends With' }\r\n];\r\nvar BooleanOperators = [\r\n    { Value: Column_1.CompareOperators.NONE, Title: 'None' },\r\n    { Value: Column_1.CompareOperators.EQUALS, Title: 'Equals' },\r\n    { Value: Column_1.CompareOperators.NOT_EQUALS, Title: 'Not Equals' }\r\n];\r\nvar ColumnModel = /** @class */ (function () {\r\n    function ColumnModel(name, options) {\r\n        this.hasFilter = this.Filter &&\r\n            (this.Filter.Text || this.Filter.Argument) &&\r\n            this.Filter.Operator !== Column_1.CompareOperators.NONE;\r\n        this.Aggregate = options && options.Aggregate || Column_1.AggregateFunctions.NONE;\r\n        this.DataType = options && options.DataType || Column_1.ColumnDataType.STRING;\r\n        this.IsKey = options && options.IsKey || false;\r\n        this.Label = options && options.Label || (name || '').replace(/([a-z])([A-Z])/g, '$1 $2');\r\n        this.Name = name;\r\n        this.Searchable = options && options.Searchable || false;\r\n        this.SortDirection = options && options.Sortable && options.SortDirection || Column_1.ColumnSortDirection.NONE;\r\n        this.SortOrder = options && this.SortDirection !== Column_1.ColumnSortDirection.NONE && options.SortOrder || -1;\r\n        this.Sortable = options && options.Sortable || false;\r\n        this.Visible = options && typeof (options.Visible) === 'boolean' ? options.Visible : true;\r\n        this.Filter = options && options.Filterable ? filterProps(name) : {};\r\n        this.Filterable = options && options.Filterable || false;\r\n        this.Filter.HasFilter = this.hasFilter;\r\n    }\r\n    ColumnModel.sortColumnArray = function (columnName, columns, multiSort) {\r\n        var column = columns.find(function (c) { return c.Name === columnName; });\r\n        if (!column) {\r\n            return;\r\n        }\r\n        column.SortDirection = column.SortDirection === Column_1.ColumnSortDirection.NONE\r\n            ? Column_1.ColumnSortDirection.ASCENDING\r\n            : column.SortDirection === Column_1.ColumnSortDirection.ASCENDING ?\r\n                Column_1.ColumnSortDirection.DESCENDING :\r\n                Column_1.ColumnSortDirection.NONE;\r\n        column.SortOrder = column.SortDirection === Column_1.ColumnSortDirection.NONE ? -1 : Number.MAX_VALUE;\r\n        if (!multiSort) {\r\n            columns\r\n                .filter(function (col) { return col.Name !== columnName; })\r\n                .forEach(function (c) {\r\n                c.SortOrder = -1;\r\n                c.SortDirection = Column_1.ColumnSortDirection.NONE;\r\n            });\r\n        }\r\n        columns\r\n            .filter(function (col) { return col.SortOrder > 0; })\r\n            .sort(function (a, b) { return a.SortOrder === b.SortOrder ? 0 : (a.SortOrder > b.SortOrder ? 1 : -1); })\r\n            .forEach(function (col, i) { col.SortOrder = i + 1; });\r\n        return columns;\r\n    };\r\n    ColumnModel.getOperators = function (column) {\r\n        switch (column.DataType) {\r\n            case Column_1.ColumnDataType.STRING:\r\n                return StringOperators;\r\n            case Column_1.ColumnDataType.NUMERIC:\r\n            case Column_1.ColumnDataType.DATE:\r\n            case Column_1.ColumnDataType.DATE_TIME:\r\n            case Column_1.ColumnDataType.DATE_TIME_UTC:\r\n                return NumericOperators;\r\n            case Column_1.ColumnDataType.BOOLEAN:\r\n                return BooleanOperators;\r\n            default:\r\n                return [];\r\n        }\r\n    };\r\n    return ColumnModel;\r\n}());\r\nexports.default = ColumnModel;\r\n"},"sourceMaps":{"js":{"version":3,"file":"ColumnModel.js","sourceRoot":"","sources":["../../src/Models/ColumnModel.ts"],"names":[],"mappings":"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","sourcesContent":["import { AggregateFunctions, ColumnDataType, ColumnSortDirection, CompareOperators } from './Column';\r\nimport IColumnModelOptions from './IColumnModelOptions';\r\n\r\nfunction filterProps(name: string): object {\r\n  return {\r\n    Argument: [],\r\n    HasFilter: false,\r\n    Name: name,\r\n    Operator: 'None',\r\n    OptionsUrl: null,\r\n    Text: null\r\n  };\r\n}\r\n\r\nconst NumericOperators = [\r\n  { Value: CompareOperators.NONE, Title: 'None' },\r\n  { Value: CompareOperators.EQUALS, Title: 'Equals' },\r\n  { Value: CompareOperators.BETWEEN, Title: 'Between' },\r\n  { Value: CompareOperators.GTE, Title: '>=' },\r\n  { Value: CompareOperators.GT, Title: '>' },\r\n  { Value: CompareOperators.LTE, Title: '<=' },\r\n  { Value: CompareOperators.LT, Title: '<' }\r\n];\r\n\r\nconst StringOperators = [\r\n  { Value: CompareOperators.NONE, Title: 'None' },\r\n  { Value: CompareOperators.EQUALS, Title: 'Equals' },\r\n  { Value: CompareOperators.NOT_EQUALS, Title: 'Not Equals' },\r\n  { Value: CompareOperators.CONTAINS, Title: 'Contains' },\r\n  { Value: CompareOperators.NOT_CONTAINS, Title: 'Not Contains' },\r\n  { Value: CompareOperators.STARTS_WITH, Title: 'Starts With' },\r\n  { Value: CompareOperators.NOT_STARTS_WITH, Title: 'Not Starts With' },\r\n  { Value: CompareOperators.ENDS_WITH, Title: 'Ends With' },\r\n  { Value: CompareOperators.NOT_ENDS_WITH, Title: 'Not Ends With' }\r\n];\r\n\r\nconst BooleanOperators = [\r\n  { Value: CompareOperators.NONE, Title: 'None' },\r\n  { Value: CompareOperators.EQUALS, Title: 'Equals' },\r\n  { Value: CompareOperators.NOT_EQUALS, Title: 'Not Equals' }\r\n];\r\n\r\nexport default class ColumnModel {\r\n  public static sortColumnArray(columnName: string, columns: ColumnModel[], multiSort: boolean) {\r\n    const column = columns.find((c: ColumnModel) => c.Name === columnName);\r\n    if (!column) { return; }\r\n\r\n    column.SortDirection = column.SortDirection === ColumnSortDirection.NONE\r\n      ? ColumnSortDirection.ASCENDING\r\n      : column.SortDirection === ColumnSortDirection.ASCENDING ?\r\n        ColumnSortDirection.DESCENDING :\r\n        ColumnSortDirection.NONE;\r\n\r\n    column.SortOrder = column.SortDirection === ColumnSortDirection.NONE ? -1 : Number.MAX_VALUE;\r\n\r\n    if (!multiSort) {\r\n      columns\r\n        .filter((col: any) => col.Name !== columnName)\r\n        .forEach((c: any) => {\r\n          c.SortOrder = -1;\r\n          c.SortDirection = ColumnSortDirection.NONE;\r\n        });\r\n    }\r\n\r\n    columns\r\n      .filter((col: ColumnModel) => col.SortOrder > 0)\r\n      .sort((a: ColumnModel, b: ColumnModel) => a.SortOrder === b.SortOrder ? 0 : (a.SortOrder > b.SortOrder ? 1 : -1))\r\n      .forEach((col: any, i: number) => { col.SortOrder = i + 1; });\r\n\r\n    return columns;\r\n  }\r\n\r\n  public static getOperators(column: ColumnModel) {\r\n    switch (column.DataType) {\r\n      case ColumnDataType.STRING:\r\n        return StringOperators;\r\n      case ColumnDataType.NUMERIC:\r\n      case ColumnDataType.DATE:\r\n      case ColumnDataType.DATE_TIME:\r\n      case ColumnDataType.DATE_TIME_UTC:\r\n        return NumericOperators;\r\n      case ColumnDataType.BOOLEAN:\r\n        return BooleanOperators;\r\n      default:\r\n        return [];\r\n    }\r\n  }\r\n\r\n  public Aggregate: AggregateFunctions;\r\n  public DataType: ColumnDataType;\r\n  public Filter: any;\r\n  public Filterable: boolean;\r\n  public IsKey: boolean;\r\n  public Label: string;\r\n  public Name: string;\r\n  public Searchable: boolean;\r\n  public SortDirection: ColumnSortDirection;\r\n  public SortOrder: number;\r\n  public Sortable: boolean;\r\n  public Visible: boolean;\r\n\r\n  public hasFilter = this.Filter &&\r\n    (this.Filter.Text || this.Filter.Argument) &&\r\n    this.Filter.Operator !== CompareOperators.NONE;\r\n\r\n  constructor(name: string, options?: IColumnModelOptions) {\r\n    this.Aggregate = options && options.Aggregate || AggregateFunctions.NONE;\r\n    this.DataType = options && options.DataType || ColumnDataType.STRING;\r\n    this.IsKey = options && options.IsKey || false;\r\n    this.Label = options && options.Label || (name || '').replace(/([a-z])([A-Z])/g, '$1 $2');\r\n    this.Name = name;\r\n    this.Searchable = options && options.Searchable || false;\r\n    this.SortDirection = options && options.Sortable && options.SortDirection || ColumnSortDirection.NONE;\r\n    this.SortOrder = options && this.SortDirection !== ColumnSortDirection.NONE && options.SortOrder || -1;\r\n    this.Sortable = options && options.Sortable || false;\r\n    this.Visible = options && typeof (options.Visible) === 'boolean' ? options.Visible : true;\r\n    this.Filter = options && options.Filterable ? filterProps(name) : {};\r\n    this.Filterable = options && options.Filterable || false;\r\n\r\n    this.Filter.HasFilter = this.hasFilter;\r\n  }\r\n}\r\n"]}},"error":null,"hash":"c0601dbc4b85ea4f196d9cbbc1259fe7","cacheData":{"env":{}}}